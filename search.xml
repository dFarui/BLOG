<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>K8S 学习记录</title>
      <link href="/BLOG/2022/05/07/k8s/"/>
      <url>/BLOG/2022/05/07/k8s/</url>
      
        <content type="html"><![CDATA[<h1 id="K8S"><a href="#K8S" class="headerlink" title="K8S"></a>K8S</h1><h2 id="K8S-网络"><a href="#K8S-网络" class="headerlink" title="K8S 网络"></a>K8S 网络</h2><pre class="line-numbers language-none"><code class="language-none">网络名字空间(network namespace)是Linux内核提供的一项非常重要的功能，它是网络虚拟化技术的基础，也是Kubernetes和以Docker为代表的容器技术在实现它们各自的网络时所依赖的基础。所以，要理解Kubernetes的网络工作原理，首先要从network namespace入手。在Linux内核里，每个network namespace都有它自己的网络设置，比如像：网络接口(network interfaces)，路由表(routing tables)等。我们利用network namespace，可以把不同的网络设置彼此隔离开来。当运行多个Docker容器的时候，Docker会在每个容器内部创建相应的network namespace，从而实现不同容器之间的网络隔离。但是光有隔离还不行，因为容器还要和外界进行网络联通，所以除了network namespace以外，另一个重要的概念是网桥(network bridge)。它是由Linux内核提供的一种链路层设备，用于在不同网段之间转发数据包。Docker就是利用网桥来实现容器和外界之间的通信的。默认情况下，Docker服务会在它所在的机器上创建一个名为docker0的网桥。下面我们就先从docker0入手，通过一系列动手实验，了解网桥在容器之间进行通信时所起的作用。<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="Network-bridge"><a href="#Network-bridge" class="headerlink" title="Network bridge"></a>Network bridge</h3><h3 id="Network-namespace"><a href="#Network-namespace" class="headerlink" title="Network namespace"></a>Network namespace</h3>]]></content>
      
      
      <categories>
          
          <category> K8S </category>
          
      </categories>
      
      
        <tags>
            
            <tag> K8S </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>curl</title>
      <link href="/BLOG/2021/07/29/curl/"/>
      <url>/BLOG/2021/07/29/curl/</url>
      
        <content type="html"><![CDATA[<h1 id="CURL"><a href="#CURL" class="headerlink" title="CURL"></a><em>CURL</em></h1><h2 id="1-简介"><a href="#1-简介" class="headerlink" title="1.简介"></a>1.简介</h2><p><code>curl</code>是常用的命令行工具，用来请求web服务器，功能非常强大，命令行参数多大10几种。</p><blockquote><p>本文介绍他的主要参数命令；作为日常参考，方便查阅; <a href="https://catonmat.net/cookbooks/curl">curl cookbook</a>; 初学者可以查看<a href="https://www.ruanyifeng.com/blog/2011/09/curl.html">curl 初学者教程</a></p></blockquote><h2 id="2-使用"><a href="#2-使用" class="headerlink" title="2.使用"></a>2.使用</h2><ul><li><p>不带任何参数是，curl就是发出GET请求</p>  <pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">$ curl https:&#x2F;&#x2F;www.example.com# 上面的命令向www.example.com 发出GET请求，服务器返回的内容会在命令行输出<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre></li><li><p><code>-A</code></p><p>  <code>-A</code>参数指定客户端的用户端的用户代理标头，即User-Agent，curl的默认用户代理字符串是<code>curl/[version]</code></p>  <pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">$ curl -A &#39;Mozilla&#x2F;5.0 (Windows NT 10.0; Win64; x64) AppleWebKit&#x2F;537.36 (KHTML, like Gecko) Chrome&#x2F;76.0.3809.100 Safari&#x2F;537.36&#39; https:&#x2F;&#x2F;google.com# 上面命令将 User-Agent 改成 Chrome 浏览器。$ curl -A &#39;&#39; https:&#x2F;&#x2F;www.google.com# 上面命令会移除User-Agent标头# 也可以通过 -H 参数直接指定标头，更改User-Agent$ curl -H &#39;User-Agent: php&#x2F;1.0&#39; https:&#x2F;&#x2F;google.com<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p><code>-b</code></p><p>  <code>-b</code>参数用来向服务器发送<code>Cookie</code></p>  <pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">$ curl -b &#39;foo-bar&#39; https:&#x2F;&#x2F;google.com# 上面命令会生成一个标头Cookie: foo&#x3D;bar，向服务器发送一个名为foo、值为bar的 Cookie。<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre></li><li><p><code>-c</code></p><p>  <code>-c</code> 参数将服务器设置的 <code>Cookie</code> 写入一个文件。</p>  <pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">$ curl -c cookies.txt https:&#x2F;&#x2F;www.google.com# 上面命令将服务器的 HTTP 回应所设置 Cookie 写入文本文件cookies.txt<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre></li><li><p><code>-d</code></p><p>  <code>-d</code>参数用于发送POST请求的数据体</p>  <pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">$ curl -d&#39;login&#x3D;emma＆password&#x3D;123&#39;-X POST https:&#x2F;&#x2F;google.com&#x2F;login# 或者$ curl -d &#39;login&#x3D;emma&#39; -d &#39;password&#x3D;123&#39; -X POST  https:&#x2F;&#x2F;google.com&#x2F;login$ curl -d &#39;@data.txt&#39; https:&#x2F;&#x2F;google.com&#x2F;login# 上面命令读取data.txt文件的内容，作为数据体向服务器发送。<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><blockquote><p>使用<code>-d</code>参数以后，<code>HTTP</code> 请求会自动加上标头<code>Content-Type : application/x-www-form-urlencoded</code>。并且会自动将请求转为 <code>POST</code> 方法，因此可以省略<code>-X POST</code>。</p></blockquote></li><li><p><code>--data-urlencode</code></p><p>  <code>--data-urlencode</code>参数等同于<code>-d</code>，发送 <code>POST</code> 请求的数据体，区别在于会自动将发送的数据进行 <code>URL</code> 编码。</p>  <pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">$ curl --data-urlencode &#39;comment&#x3D;hello world&#39; https:&#x2F;&#x2F;google.com&#x2F;login# 上面代码中，发送的数据hello world之间有一个空格，需要进行 URL 编码。<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre></li><li><p><code>-e</code></p><p>  -e参数用来设置 HTTP 的标头Referer，表示请求的来源。</p>  <pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">$ curl -e &#39;https:&#x2F;&#x2F;google.com?q&#x3D;example&#39; https:&#x2F;&#x2F;www.example.com# 上面命令将Referer标头设为https:&#x2F;&#x2F;google.com?q&#x3D;example。# -H参数可以通过直接添加标头Referer，达到同样效果。$ curl -H &#39;Referer: https:&#x2F;&#x2F;google.com?q&#x3D;example&#39; https:&#x2F;&#x2F;www.example.com<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p><code>-F</code></p><p>  -F参数用来向服务器上传二进制文件。</p>  <pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">    $ curl -F &#39;file&#x3D;@photo.png&#39; https:&#x2F;&#x2F;google.com&#x2F;profile    # 上面命令会给 HTTP 请求加上标头Content-Type: multipart&#x2F;form-data，然后将文件photo.png作为file字段上传。    -F参数可以指定 MIME 类型。    $ curl -F &#39;file&#x3D;@photo.png;type&#x3D;image&#x2F;png&#39; https:&#x2F;&#x2F;google.com&#x2F;profile    # 上面命令指定 MIME 类型为image&#x2F;png，否则 curl 会把 MIME 类型设为application&#x2F;octet-stream。    -F参数也可以指定文件名。    $ curl -F &#39;file&#x3D;@photo.png;filename&#x3D;me.png&#39; https:&#x2F;&#x2F;google.com&#x2F;profile    # 上面命令中，原始文件名为photo.png，但是服务器接收到的文件名为me.png。    &#96;&#96;&#96;shell- &#96;-G&#96;    -G参数用来构造 URL 的查询字符串。    &#96;&#96;&#96;shell    $ curl -G -d &#39;q&#x3D;kitties&#39; -d &#39;count&#x3D;20&#39; https:&#x2F;&#x2F;google.com&#x2F;search    # 上面命令会发出一个 GET 请求，实际请求的 URL 为https:&#x2F;&#x2F;google.com&#x2F;search?q&#x3D;kitties&amp;count&#x3D;20。如果省略--G，会发出一个 POST 请求。    如果数据需要 URL 编码，可以结合--data--urlencode参数。    $ curl -G --data-urlencode &#39;comment&#x3D;hello world&#39; https:&#x2F;&#x2F;www.example.com<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p><code>-H</code></p><p>  -H参数添加 HTTP 请求的标头。</p>  <pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">$ curl -H &#39;Accept-Language: en-US&#39; https:&#x2F;&#x2F;google.com# 上面命令添加 HTTP 标头Accept-Language: en-US。$ curl -H &#39;Accept-Language: en-US&#39; -H &#39;Secret-Message: xyzzy&#39; https:&#x2F;&#x2F;google.com# 上面命令添加两个 HTTP 标头。$ curl -d &#39;&#123;&quot;login&quot;: &quot;emma&quot;, &quot;pass&quot;: &quot;123&quot;&#125;&#39; -H &#39;Content-Type: application&#x2F;json&#39; https:&#x2F;&#x2F;google.com&#x2F;login# 上面命令添加 HTTP 请求的标头是Content-Type: application&#x2F;json，然后用-d参数发送 JSON 数据。<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p><code>-i</code></p><p>  -i参数打印出服务器回应的 HTTP 标头。</p>  <pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">$ curl -i https:&#x2F;&#x2F;www.example.com# 上面命令收到服务器回应后，先输出服务器回应的标头，然后空一行，再输出网页的源码。<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre></li><li><p><code>-I</code></p><p>  -I参数向服务器发出 HEAD 请求，然会将服务器返回的 HTTP 标头打印出来。</p>  <pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">$ curl -I https:&#x2F;&#x2F;www.example.com# 上面命令输出服务器对 HEAD 请求的回应。--head参数等同于-I。$ curl --head https:&#x2F;&#x2F;www.example.com<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p><code>-k</code></p><p>  -k参数指定跳过 SSL 检测。</p>  <pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">$ curl -k https:&#x2F;&#x2F;www.example.com上面命令不会检查服务器的 SSL 证书是否正确。<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre></li><li><p><code>-L</code><br>  -L参数会让 HTTP 请求跟随服务器的重定向。curl 默认不跟随重定向。</p>  <pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">$ curl -L -d &#39;tweet&#x3D;hi&#39; https:&#x2F;&#x2F;api.twitter.com&#x2F;tweet<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li><p><code>--limit-rate</code></p><p>  –limit-rate用来限制 HTTP 请求和回应的带宽，模拟慢网速的环境。</p>  <pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">$ curl --limit-rate 200k https:&#x2F;&#x2F;google.com# 上面命令将带宽限制在每秒 200K 字节。<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre></li><li><p><code>-o</code></p><p>  -o参数将服务器的回应保存成文件，等同于wget命令。</p>  <pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">$ curl -o example.html https:&#x2F;&#x2F;www.example.com# 上面命令将www.example.com保存成example.html。<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre></li><li><p><code>-O</code><br>  -O参数将服务器回应保存成文件，并将 URL 的最后部分当作文件名。</p>  <pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">$ curl -O https:&#x2F;&#x2F;www.example.com&#x2F;foo&#x2F;bar.html# 上面命令将服务器回应保存成文件，文件名为bar.html。<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre></li><li><p><code>-s</code></p><p>  -s参数将不输出错误和进度信息。</p>  <pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">$ curl -s https:&#x2F;&#x2F;www.example.com# 上面命令一旦发生错误，不会显示错误信息。不发生错误的话，会正常显示运行结果。如果想让 curl 不产生任何输出，可以使用下面的命令。$ curl -s -o &#x2F;dev&#x2F;null https:&#x2F;&#x2F;google.com<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p><code>-S</code></p><p>  -S参数指定只输出错误信息，通常与-s一起使用。</p>  <pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">$ curl -s -o &#x2F;dev&#x2F;null https:&#x2F;&#x2F;google.com# 上面命令没有任何输出，除非发生错误。<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre></li><li><p><code>-u</code></p><p>  -u参数用来设置服务器认证的用户名和密码。</p>  <pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">$ curl -u &#39;bob:12345&#39; https:&#x2F;&#x2F;google.com&#x2F;login# 上面命令设置用户名为bob，密码为12345，然后将其转为 HTTP 标头Authorization: Basic Ym9iOjEyMzQ1。curl 能够识别 URL 里面的用户名和密码。$ curl https:&#x2F;&#x2F;bob:12345@google.com&#x2F;login# 上面命令能够识别 URL 里面的用户名和密码，将其转为上个例子里面的 HTTP 标头。$ curl -u &#39;bob&#39; https:&#x2F;&#x2F;google.com&#x2F;login# 上面命令只设置了用户名，执行后，curl 会提示用户输入密码。<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p><code>-v</code></p><p>  -v参数输出通信的整个过程，用于调试。</p>  <pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">$ curl -v https:&#x2F;&#x2F;www.example.com--trace参数也可以用于调试，还会输出原始的二进制数据。$ curl --trace - https:&#x2F;&#x2F;www.example.com<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p><code>-x</code></p><p>  -x参数指定 HTTP 请求的代理。</p>  <pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">$ curl -x socks5:&#x2F;&#x2F;james:cats@myproxy.com:8080 https:&#x2F;&#x2F;www.example.com# 上面命令指定 HTTP 请求通过myproxy.com:8080的 socks5 代理发出。如果没有指定代理协议，默认为 HTTP。$ curl -x james:cats@myproxy.com:8080 https:&#x2F;&#x2F;www.example.com# 上面命令中，请求的代理使用 HTTP 协议。<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p><code>-X</code></p><p>  -X参数指定 HTTP 请求的方法。</p>  <pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">$ curl -X POST https:&#x2F;&#x2F;www.example.com# 上面命令对https:&#x2F;&#x2F;www.example.com发出 POST 请求。<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre></li></ul><hr><p><a href="https://www.ruanyifeng.com/blog/2019/09/curl-reference.html">参考</a></p><h1 id="OPENSTACK-API"><a href="#OPENSTACK-API" class="headerlink" title="OPENSTACK API"></a><em>OPENSTACK API</em></h1><h2 id="1-API接口"><a href="#1-API接口" class="headerlink" title="1.API接口"></a>1.API接口</h2><p><a href="https://docs.openstack.org/api-quick-start/#"><strong>OpenSatckAPI</strong></a></p><h2 id="2-获取token"><a href="#2-获取token" class="headerlink" title="2.获取token"></a>2.获取token</h2><ul><li><p><code>openstack cli</code></p>  <pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">$ source openrc$ openstack token issue<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre></li><li><p><code>curl</code></p>  <pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">[stack@openstack ~]$ curl -i -X POST http:&#x2F;&#x2F;10.196.33.10&#x2F;identity&#x2F;v3&#x2F;auth&#x2F;tokens -H &quot;Content-Type: application&#x2F;json&quot; -d &#39;&#123;&quot;auth&quot;: &#123;&quot;identity&quot;: &#123;&quot;methods&quot;: [&quot;password&quot;],&quot;password&quot;: &#123;&quot;user&quot;: &#123;&quot;name&quot;: &quot;admin&quot;, &quot;domain&quot;: &#123;&quot;name&quot;: &quot;default&quot;&#125;,&quot;password&quot;: &quot;openstack&quot;&#125;&#125;&#125;&#125;&#125;&#39;HTTP&#x2F;1.1 201 CREATEDDate: Sun, 01 Aug 2021 03:24:53 GMTServer: Apache&#x2F;2.4.6 (CentOS) OpenSSL&#x2F;1.0.2k-fips mod_wsgi&#x2F;3.4 Python&#x2F;2.7.5Content-Type: application&#x2F;jsonContent-Length: 312X-Subject-Token:    gAAAAABhBhQFZ8P6dDC2j1oTN0I0D9qjM57MM43zgLS7g8_rzqgqaQXSrgtmFiRSjsegI_qBjFmoS3UKayhTs3gWUr-nl1DU6PyilCp    NHqXWPwU12dgtKLhWWzGLThssnMaCjcglzG2T4olLg1WNVYztjYfQM_HErgVary: X-Auth-Tokenx-openstack-request-id: req-acc25d01-a2a5-44fd-9ea8-4ac8bf82c51fConnection: close&#123;&quot;token&quot;: &#123;&quot;issued_at&quot;: &quot;2021-08-01T03:24:53.000000Z&quot;, &quot;audit_ids&quot;: [&quot;6yiziGokQJijxOfR7SfJ0A&quot;],     &quot;methods&quot;: [&quot;password&quot;], &quot;expires_at&quot;: &quot;2021-08-01T04:24:53.000000Z&quot;, &quot;user&quot;: &#123;&quot;password_expires_at&quot;:   null, &quot;domain&quot;: &#123;&quot;id&quot;: &quot;default&quot;, &quot;name&quot;: &quot;Default&quot;&#125;, &quot;id&quot;: &quot;d3336c1c8b434b5285ae7dd2afc8c9ac&quot;,   &quot;name&quot;: &quot;admin&quot;&#125;&#125;&#125;[stack@openstack ~]$<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>  <pre class="line-numbers language-json" data-language="json"><code class="language-json"># Request<span class="token punctuation">&#123;</span>    <span class="token property">"auth"</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>        <span class="token property">"identity"</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>            <span class="token property">"methods"</span><span class="token operator">:</span> <span class="token punctuation">[</span>                <span class="token string">"password"</span>            <span class="token punctuation">]</span><span class="token punctuation">,</span>            <span class="token property">"password"</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>                <span class="token property">"user"</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>                    <span class="token property">"name"</span><span class="token operator">:</span> <span class="token string">"admin"</span><span class="token punctuation">,</span>                    <span class="token property">"domain"</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>                        <span class="token property">"name"</span><span class="token operator">:</span> <span class="token string">"Default"</span>                    <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>                    <span class="token property">"password"</span><span class="token operator">:</span> <span class="token string">"openstack"</span>                <span class="token punctuation">&#125;</span>            <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ul><h2 id="3-获取nova列表"><a href="#3-获取nova列表" class="headerlink" title="3.获取nova列表"></a>3.获取nova列表</h2><pre class="line-numbers language-json" data-language="json"><code class="language-json"><span class="token punctuation">[</span>stack@openstack ~<span class="token punctuation">]</span>$ curl  -X GET http<span class="token operator">:</span><span class="token comment">//10.196.33.10/compute/v2.1/servers -H "Content-Type: application/json" -H 'X-Auth-Token: gAAAAABhBhUbqBPYJY8OObNKQLP93g7U5WZDFzCBEtrGB32b521KsYnZSre-rUVg645bWW6GNLd-G-05v7e5e4xSHMoX_Kf5sUlu5DbSSLZlWAlNGMsT01C3r0Lawbk21sN8CyyDti32GQ_pGHZb7lUGhBgHS0-EVw'|python -m json.tool</span>  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current                                 Dload  Upload   Total   Spent    Left  Speed<span class="token number">100</span>    <span class="token number">15</span>  <span class="token number">100</span>    <span class="token number">15</span>    <span class="token number">0</span>     <span class="token number">0</span>    <span class="token number">647</span>      <span class="token number">0</span> --<span class="token operator">:</span>--<span class="token operator">:</span>-- --<span class="token operator">:</span>--<span class="token operator">:</span>-- --<span class="token operator">:</span>--<span class="token operator">:</span>--   <span class="token number">681</span><span class="token punctuation">&#123;</span>    <span class="token property">"servers"</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">&#125;</span># 由于没有创建vm，所以返回为空，# 使用flavor举例，获取flavor列表<span class="token punctuation">[</span>stack@openstack ~<span class="token punctuation">]</span>$ curl  -X GET http<span class="token operator">:</span><span class="token comment">//10.196.33.10/compute/v2.1/flavors -H "Content-Type: application/json" -H 'X-Auth-Token: gAAAAABhBhUbqBPYJY8OObNKQLP93g7U5WZDFzCBEtrGB32b521KsYnZSre-rUVg645bWW6GNLd-G-05v7e5e4xSHMoX_Kf5sUlu5DbSSLZlWAlNGMsT01C3r0Lawbk21sN8CyyDti32GQ_pGHZb7lUGhBgHS0-EVw'|python -m json.tool</span>  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current                                 Dload  Upload   Total   Spent    Left  Speed<span class="token number">100</span>  <span class="token number">2241</span>  <span class="token number">100</span>  <span class="token number">2241</span>    <span class="token number">0</span>     <span class="token number">0</span>  <span class="token number">69713</span>      <span class="token number">0</span> --<span class="token operator">:</span>--<span class="token operator">:</span>-- --<span class="token operator">:</span>--<span class="token operator">:</span>-- --<span class="token operator">:</span>--<span class="token operator">:</span>-- <span class="token number">72290</span><span class="token punctuation">&#123;</span>    <span class="token property">"flavors"</span><span class="token operator">:</span> <span class="token punctuation">[</span>        <span class="token punctuation">&#123;</span>            <span class="token property">"id"</span><span class="token operator">:</span> <span class="token string">"1"</span><span class="token punctuation">,</span>            <span class="token property">"links"</span><span class="token operator">:</span> <span class="token punctuation">[</span>                <span class="token punctuation">&#123;</span>                    <span class="token property">"href"</span><span class="token operator">:</span> <span class="token string">"http://10.196.33.10/compute/v2.1/flavors/1"</span><span class="token punctuation">,</span>                    <span class="token property">"rel"</span><span class="token operator">:</span> <span class="token string">"self"</span>                <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>                <span class="token punctuation">&#123;</span>                    <span class="token property">"href"</span><span class="token operator">:</span> <span class="token string">"http://10.196.33.10/compute/flavors/1"</span><span class="token punctuation">,</span>                    <span class="token property">"rel"</span><span class="token operator">:</span> <span class="token string">"bookmark"</span>                <span class="token punctuation">&#125;</span>            <span class="token punctuation">]</span><span class="token punctuation">,</span>            <span class="token property">"name"</span><span class="token operator">:</span> <span class="token string">"m1.tiny"</span>        <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>        <span class="token punctuation">&#123;</span>            <span class="token property">"id"</span><span class="token operator">:</span> <span class="token string">"2"</span><span class="token punctuation">,</span>            <span class="token property">"links"</span><span class="token operator">:</span> <span class="token punctuation">[</span>                <span class="token punctuation">&#123;</span>                    <span class="token property">"href"</span><span class="token operator">:</span> <span class="token string">"http://10.196.33.10/compute/v2.1/flavors/2"</span><span class="token punctuation">,</span>                    <span class="token property">"rel"</span><span class="token operator">:</span> <span class="token string">"self"</span>                <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>                <span class="token punctuation">&#123;</span>                    <span class="token property">"href"</span><span class="token operator">:</span> <span class="token string">"http://10.196.33.10/compute/flavors/2"</span><span class="token punctuation">,</span>                    <span class="token property">"rel"</span><span class="token operator">:</span> <span class="token string">"bookmark"</span>                <span class="token punctuation">&#125;</span>            <span class="token punctuation">]</span><span class="token punctuation">,</span>            <span class="token property">"name"</span><span class="token operator">:</span> <span class="token string">"m1.small"</span>        <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>        <span class="token punctuation">&#123;</span>            <span class="token property">"id"</span><span class="token operator">:</span> <span class="token string">"3"</span><span class="token punctuation">,</span>            <span class="token property">"links"</span><span class="token operator">:</span> <span class="token punctuation">[</span>                <span class="token punctuation">&#123;</span>                    <span class="token property">"href"</span><span class="token operator">:</span> <span class="token string">"http://10.196.33.10/compute/v2.1/flavors/3"</span><span class="token punctuation">,</span>                    <span class="token property">"rel"</span><span class="token operator">:</span> <span class="token string">"self"</span>                <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>                <span class="token punctuation">&#123;</span>                    <span class="token property">"href"</span><span class="token operator">:</span> <span class="token string">"http://10.196.33.10/compute/flavors/3"</span><span class="token punctuation">,</span>                    <span class="token property">"rel"</span><span class="token operator">:</span> <span class="token string">"bookmark"</span>                <span class="token punctuation">&#125;</span>            <span class="token punctuation">]</span><span class="token punctuation">,</span>            <span class="token property">"name"</span><span class="token operator">:</span> <span class="token string">"m1.medium"</span>        <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>        <span class="token punctuation">&#123;</span>            <span class="token property">"id"</span><span class="token operator">:</span> <span class="token string">"4"</span><span class="token punctuation">,</span>            <span class="token property">"links"</span><span class="token operator">:</span> <span class="token punctuation">[</span>                <span class="token punctuation">&#123;</span>                    <span class="token property">"href"</span><span class="token operator">:</span> <span class="token string">"http://10.196.33.10/compute/v2.1/flavors/4"</span><span class="token punctuation">,</span>                    <span class="token property">"rel"</span><span class="token operator">:</span> <span class="token string">"self"</span>                <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>                <span class="token punctuation">&#123;</span>                    <span class="token property">"href"</span><span class="token operator">:</span> <span class="token string">"http://10.196.33.10/compute/flavors/4"</span><span class="token punctuation">,</span>                    <span class="token property">"rel"</span><span class="token operator">:</span> <span class="token string">"bookmark"</span>                <span class="token punctuation">&#125;</span>            <span class="token punctuation">]</span><span class="token punctuation">,</span>            <span class="token property">"name"</span><span class="token operator">:</span> <span class="token string">"m1.large"</span>        <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>        <span class="token punctuation">&#123;</span>            <span class="token property">"id"</span><span class="token operator">:</span> <span class="token string">"42"</span><span class="token punctuation">,</span>            <span class="token property">"links"</span><span class="token operator">:</span> <span class="token punctuation">[</span>                <span class="token punctuation">&#123;</span>                    <span class="token property">"href"</span><span class="token operator">:</span> <span class="token string">"http://10.196.33.10/compute/v2.1/flavors/42"</span><span class="token punctuation">,</span>                    <span class="token property">"rel"</span><span class="token operator">:</span> <span class="token string">"self"</span>                <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>                <span class="token punctuation">&#123;</span>                    <span class="token property">"href"</span><span class="token operator">:</span> <span class="token string">"http://10.196.33.10/compute/flavors/42"</span><span class="token punctuation">,</span>                    <span class="token property">"rel"</span><span class="token operator">:</span> <span class="token string">"bookmark"</span>                <span class="token punctuation">&#125;</span>            <span class="token punctuation">]</span><span class="token punctuation">,</span>            <span class="token property">"name"</span><span class="token operator">:</span> <span class="token string">"m1.nano"</span>        <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>        <span class="token punctuation">&#123;</span>            <span class="token property">"id"</span><span class="token operator">:</span> <span class="token string">"5"</span><span class="token punctuation">,</span>            <span class="token property">"links"</span><span class="token operator">:</span> <span class="token punctuation">[</span>                <span class="token punctuation">&#123;</span>                    <span class="token property">"href"</span><span class="token operator">:</span> <span class="token string">"http://10.196.33.10/compute/v2.1/flavors/5"</span><span class="token punctuation">,</span>                    <span class="token property">"rel"</span><span class="token operator">:</span> <span class="token string">"self"</span>                <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>                <span class="token punctuation">&#123;</span>                    <span class="token property">"href"</span><span class="token operator">:</span> <span class="token string">"http://10.196.33.10/compute/flavors/5"</span><span class="token punctuation">,</span>                    <span class="token property">"rel"</span><span class="token operator">:</span> <span class="token string">"bookmark"</span>                <span class="token punctuation">&#125;</span>            <span class="token punctuation">]</span><span class="token punctuation">,</span>            <span class="token property">"name"</span><span class="token operator">:</span> <span class="token string">"m1.xlarge"</span>        <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>        <span class="token punctuation">&#123;</span>            <span class="token property">"id"</span><span class="token operator">:</span> <span class="token string">"84"</span><span class="token punctuation">,</span>            <span class="token property">"links"</span><span class="token operator">:</span> <span class="token punctuation">[</span>                <span class="token punctuation">&#123;</span>                    <span class="token property">"href"</span><span class="token operator">:</span> <span class="token string">"http://10.196.33.10/compute/v2.1/flavors/84"</span><span class="token punctuation">,</span>                    <span class="token property">"rel"</span><span class="token operator">:</span> <span class="token string">"self"</span>                <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>                <span class="token punctuation">&#123;</span>                    <span class="token property">"href"</span><span class="token operator">:</span> <span class="token string">"http://10.196.33.10/compute/flavors/84"</span><span class="token punctuation">,</span>                    <span class="token property">"rel"</span><span class="token operator">:</span> <span class="token string">"bookmark"</span>                <span class="token punctuation">&#125;</span>            <span class="token punctuation">]</span><span class="token punctuation">,</span>            <span class="token property">"name"</span><span class="token operator">:</span> <span class="token string">"m1.micro"</span>        <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>        <span class="token punctuation">&#123;</span>            <span class="token property">"id"</span><span class="token operator">:</span> <span class="token string">"c1"</span><span class="token punctuation">,</span>            <span class="token property">"links"</span><span class="token operator">:</span> <span class="token punctuation">[</span>                <span class="token punctuation">&#123;</span>                    <span class="token property">"href"</span><span class="token operator">:</span> <span class="token string">"http://10.196.33.10/compute/v2.1/flavors/c1"</span><span class="token punctuation">,</span>                    <span class="token property">"rel"</span><span class="token operator">:</span> <span class="token string">"self"</span>                <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>                <span class="token punctuation">&#123;</span>                    <span class="token property">"href"</span><span class="token operator">:</span> <span class="token string">"http://10.196.33.10/compute/flavors/c1"</span><span class="token punctuation">,</span>                    <span class="token property">"rel"</span><span class="token operator">:</span> <span class="token string">"bookmark"</span>                <span class="token punctuation">&#125;</span>            <span class="token punctuation">]</span><span class="token punctuation">,</span>            <span class="token property">"name"</span><span class="token operator">:</span> <span class="token string">"cirros256"</span>        <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>        <span class="token punctuation">&#123;</span>            <span class="token property">"id"</span><span class="token operator">:</span> <span class="token string">"d1"</span><span class="token punctuation">,</span>            <span class="token property">"links"</span><span class="token operator">:</span> <span class="token punctuation">[</span>                <span class="token punctuation">&#123;</span>                    <span class="token property">"href"</span><span class="token operator">:</span> <span class="token string">"http://10.196.33.10/compute/v2.1/flavors/d1"</span><span class="token punctuation">,</span>                    <span class="token property">"rel"</span><span class="token operator">:</span> <span class="token string">"self"</span>                <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>                <span class="token punctuation">&#123;</span>                    <span class="token property">"href"</span><span class="token operator">:</span> <span class="token string">"http://10.196.33.10/compute/flavors/d1"</span><span class="token punctuation">,</span>                    <span class="token property">"rel"</span><span class="token operator">:</span> <span class="token string">"bookmark"</span>                <span class="token punctuation">&#125;</span>            <span class="token punctuation">]</span><span class="token punctuation">,</span>            <span class="token property">"name"</span><span class="token operator">:</span> <span class="token string">"ds512M"</span>        <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>        <span class="token punctuation">&#123;</span>            <span class="token property">"id"</span><span class="token operator">:</span> <span class="token string">"d2"</span><span class="token punctuation">,</span>            <span class="token property">"links"</span><span class="token operator">:</span> <span class="token punctuation">[</span>                <span class="token punctuation">&#123;</span>                    <span class="token property">"href"</span><span class="token operator">:</span> <span class="token string">"http://10.196.33.10/compute/v2.1/flavors/d2"</span><span class="token punctuation">,</span>                    <span class="token property">"rel"</span><span class="token operator">:</span> <span class="token string">"self"</span>                <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>                <span class="token punctuation">&#123;</span>                    <span class="token property">"href"</span><span class="token operator">:</span> <span class="token string">"http://10.196.33.10/compute/flavors/d2"</span><span class="token punctuation">,</span>                    <span class="token property">"rel"</span><span class="token operator">:</span> <span class="token string">"bookmark"</span>                <span class="token punctuation">&#125;</span>            <span class="token punctuation">]</span><span class="token punctuation">,</span>            <span class="token property">"name"</span><span class="token operator">:</span> <span class="token string">"ds1G"</span>        <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>        <span class="token punctuation">&#123;</span>            <span class="token property">"id"</span><span class="token operator">:</span> <span class="token string">"d3"</span><span class="token punctuation">,</span>            <span class="token property">"links"</span><span class="token operator">:</span> <span class="token punctuation">[</span>                <span class="token punctuation">&#123;</span>                    <span class="token property">"href"</span><span class="token operator">:</span> <span class="token string">"http://10.196.33.10/compute/v2.1/flavors/d3"</span><span class="token punctuation">,</span>                    <span class="token property">"rel"</span><span class="token operator">:</span> <span class="token string">"self"</span>                <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>                <span class="token punctuation">&#123;</span>                    <span class="token property">"href"</span><span class="token operator">:</span> <span class="token string">"http://10.196.33.10/compute/flavors/d3"</span><span class="token punctuation">,</span>                    <span class="token property">"rel"</span><span class="token operator">:</span> <span class="token string">"bookmark"</span>                <span class="token punctuation">&#125;</span>            <span class="token punctuation">]</span><span class="token punctuation">,</span>            <span class="token property">"name"</span><span class="token operator">:</span> <span class="token string">"ds2G"</span>        <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>        <span class="token punctuation">&#123;</span>            <span class="token property">"id"</span><span class="token operator">:</span> <span class="token string">"d4"</span><span class="token punctuation">,</span>            <span class="token property">"links"</span><span class="token operator">:</span> <span class="token punctuation">[</span>                <span class="token punctuation">&#123;</span>                    <span class="token property">"href"</span><span class="token operator">:</span> <span class="token string">"http://10.196.33.10/compute/v2.1/flavors/d4"</span><span class="token punctuation">,</span>                    <span class="token property">"rel"</span><span class="token operator">:</span> <span class="token string">"self"</span>                <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>                <span class="token punctuation">&#123;</span>                    <span class="token property">"href"</span><span class="token operator">:</span> <span class="token string">"http://10.196.33.10/compute/flavors/d4"</span><span class="token punctuation">,</span>                    <span class="token property">"rel"</span><span class="token operator">:</span> <span class="token string">"bookmark"</span>                <span class="token punctuation">&#125;</span>            <span class="token punctuation">]</span><span class="token punctuation">,</span>            <span class="token property">"name"</span><span class="token operator">:</span> <span class="token string">"ds4G"</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">]</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><blockquote><p>如上述两个例子，结合openstack api 实际使用了curl命令，增加对curl命令的了解</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> curl </category>
          
      </categories>
      
      
        <tags>
            
            <tag> linux </tag>
            
            <tag> curl </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>VIM</title>
      <link href="/BLOG/2021/07/21/vimconfig/"/>
      <url>/BLOG/2021/07/21/vimconfig/</url>
      
        <content type="html"><![CDATA[<h1 id="VIM"><a href="#VIM" class="headerlink" title="VIM"></a>VIM</h1><h2 id="VIM-install"><a href="#VIM-install" class="headerlink" title="VIM install"></a>VIM install</h2><table><thead><tr><th align="center">software</th><th align="center">version</th></tr></thead><tbody><tr><td align="center">system</td><td align="center">centos8.4.2105</td></tr><tr><td align="center">python</td><td align="center">python3.6.8</td></tr><tr><td align="center">vim</td><td align="center">8.2</td></tr><tr><td align="center">cmake</td><td align="center">3.18.2</td></tr><tr><td align="center">ctags</td><td align="center">5.8</td></tr><tr><td align="center">other</td><td align="center">gcc, gcc-c++, make, kernel-devel</td></tr></tbody></table><h3 id="update-vim-version-to-8-2"><a href="#update-vim-version-to-8-2" class="headerlink" title="update vim version to 8.2"></a>update vim version to 8.2</h3><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell"># vim --versionVIM - Vi IMproved 8.2 (2019 Dec 12, compiled Jul 24 2021 10:33:06)Compiled by root@centos8Huge version without GUI.  Features included (+) or not (-):+acl               -farsi             -mouse_sysmouse    -tag_old_static+arabic            +file_in_path      +mouse_urxvt       -tag_any_white+autocmd           +find_in_path      +mouse_xterm       -tcl+autochdir         +float             +multi_byte        +termguicolors-autoservername    +folding           +multi_lang        +terminal-balloon_eval      -footer            -mzscheme          +terminfo+balloon_eval_term +fork()            +netbeans_intg     +termresponse-browse            +gettext           +num64             +textobjects++builtin_terms    -hangul_input      +packages          +textprop+byte_offset       +iconv             +path_extra        +timers+channel           +insert_expand     -perl              +title+cindent           +job               +persistent_undo   -toolbar-clientserver      +jumplist          +popupwin          +user_commands-clipboard         +keymap            +postscript        +vartabs+cmdline_compl     +lambda            +printer           +vertsplit+cmdline_hist      +langmap           +profile           +virtualedit+cmdline_info      +libcall           -python            +visual+comments          +linebreak         +python3           +visualextra+conceal           +lispindent        +quickfix          +viminfo+cryptv            +listcmds          +reltime           +vreplace+cscope            +localmap          +rightleft         +wildignore+cursorbind        -lua               -ruby              +wildmenu+cursorshape       +menu              +scrollbind        +windows+dialog_con        +mksession         +signs             +writebackup+diff              +modify_fname      +smartindent       -X11+digraphs          +mouse             -sound             -xfontset-dnd               -mouseshape        +spell             -xim-ebcdic            +mouse_dec         +startuptime       -xpm+emacs_tags        -mouse_gpm         +statusline        -xsmp+eval              -mouse_jsbterm     -sun_workshop      -xterm_clipboard+ex_extra          +mouse_netterm     +syntax            -xterm_save+extra_search      +mouse_sgr         +tag_binary   system vimrc file: &quot;$VIM&#x2F;vimrc&quot;     user vimrc file: &quot;$HOME&#x2F;.vimrc&quot; 2nd user vimrc file: &quot;~&#x2F;.vim&#x2F;vimrc&quot;      user exrc file: &quot;$HOME&#x2F;.exrc&quot;       defaults file: &quot;$VIMRUNTIME&#x2F;defaults.vim&quot;  fall-back for $VIM: &quot;&#x2F;usr&#x2F;local&#x2F;share&#x2F;vim&quot;Compilation: gcc -c -I. -Iproto -DHAVE_CONFIG_H     -g -O2 -U_FORTIFY_SOURCE -D_FORTIFY_SOURCE&#x3D;1Linking: gcc   -L&#x2F;usr&#x2F;local&#x2F;lib -Wl,--as-needed -o vim        -lm -ltinfo   -ldl     -L&#x2F;usr&#x2F;lib&#x2F;python3.6&#x2F;config -lpython3.6m<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>确保VIM版本为最新并且支持python3（执行vim –version后，显示<code>+python3</code>，表示支持python3）<br>centos8自带vim版本为vim8.0，并不满足接下来的配置，需要重新编译安装vim8.2，步骤如下：</p><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell"># 下载vim8.2的包wget https:&#x2F;&#x2F;ftp.nluug.nl&#x2F;pub&#x2F;vim&#x2F;unix&#x2F;vim-8.2.tar.bz2# 解压tar xvf vim-8.2.tar.bz2# cd .&#x2F;vim82 , 重新编译VIM8.2cd .&#x2F;vim82.&#x2F;configure --enable-python3interp&#x3D;yes --with-python3-config-dir&#x3D;&#x2F;usr&#x2F;lib&#x2F;python3.6&#x2F;config #确保重新编译的VIM8.2支持python3<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>configure 的过程可能会出现如下问题：</p><pre class="line-numbers language-log" data-language="log"><code class="language-log">no terminal library foundchecking for tgetent<span class="token operator">(</span><span class="token operator">)</span>… configure<span class="token operator">:</span> error<span class="token operator">:</span> NOT FOUND<span class="token operator">!</span>You need to install a terminal library<span class="token operator">;</span> for example ncurses<span class="token punctuation">.</span>Or specify the name of the library with –with<span class="token operator">-</span>tlib<span class="token punctuation">.</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p><strong>workaround</strong></p><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">dnf install ncurses ncurses-devel<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><strong>编译安装</strong></p><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">make &amp;&amp; make install<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>如果编译之后，vim并没有支持python3，大概率最重要的参数—with-python3-config-dir 路径写的不正确，可以使用python3-config –configdir查看路径，其实高版本的vim是不需要这个参数的，安装脚本可以自行找到–—with-python-config-dir参数，但是需要有python-devel支持<br>如果没有，可以使用dnf安装，我的环境使用如下命令安装</p><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">dnf install python36-devel# test[root@centos8 vim82]# python3-config --configdir&#x2F;usr&#x2F;lib64&#x2F;python3.6&#x2F;config-3.6m-x86_64-linux-gnu<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="VIM-config"><a href="#VIM-config" class="headerlink" title="VIM config"></a>VIM config</h2><h3 id="Plugin-and-Instruction-manual"><a href="#Plugin-and-Instruction-manual" class="headerlink" title="Plugin and Instruction manual"></a>Plugin and Instruction manual</h3><ul><li><p><code>VundleVim/Vundle.vim</code><br> <strong>插件管理</strong></p> <pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">git clone https:&#x2F;&#x2F;github.com&#x2F;VundleVim&#x2F;Vundle.vim.git ~&#x2F;.vim&#x2F;bundle&#x2F;Vundle.vim<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li><p><code>Lokaltog/vim-powerline</code><br> <strong>状态栏，vimrc配置</strong></p> <pre class="line-numbers language-vim" data-language="vim"><code class="language-vim"><span class="token comment">" Powerline 设置</span><span class="token comment">" 设置状态栏主题风格</span><span class="token comment">" 将字体设置为Meslo LG S DZ Regular for Powerline 13号大小</span><span class="token keyword">set</span> <span class="token builtin">guifont</span><span class="token operator">=</span>Meslo\ LG\ S\ DZ\ Regular\ <span class="token keyword">for</span>\ Powerline<span class="token punctuation">:</span>h13<span class="token keyword">let</span> g<span class="token punctuation">:</span>Powerline_symbols <span class="token operator">=</span> <span class="token string">'fancy'</span>       <span class="token comment">" Powerline_symbols为状态栏中的箭头，unicode没有箭头</span><span class="token comment">"let g:Powerline_symbols= </span><span class="token string">'unicode'</span><span class="token keyword">set</span> <span class="token builtin">laststatus</span><span class="token operator">=</span><span class="token number">2</span>                <span class="token comment">" 必须设置为2,否则状态栏不显示</span><span class="token keyword">set</span> <span class="token builtin">t_Co</span><span class="token operator">=</span><span class="token number">256</span>                    <span class="token comment">" 开启256颜色之后，colorschema在vim里好看了许多</span><span class="token keyword">let</span> g<span class="token punctuation">:</span>Powerline_colorscheme<span class="token operator">=</span><span class="token string">'solarized256'</span>  <span class="token comment">" 状态栏使用了solarized256配色方案</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p> <img src="https://raw.githubusercontent.com/dFarui/images/master/powerline.png" alt="powerline"></p></li><li><p><code>majutsushi/tagbar</code><br>  <strong>使用插件</strong></p>  <pre class="line-numbers language-shell" data-language="shell"><code class="language-shell"># 依赖ctagsdnf install ctags# 插件使用方式 每个人设置不同，详细根据vimrc文件设置使用&lt;space&gt;键位为leader键&lt;space&gt; + t: 打开tagbar?: 快捷帮助文档<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>  <strong>vimrc配置</strong></p>  <pre class="line-numbers language-vim" data-language="vim"><code class="language-vim"><span class="token comment">"------------tagbar--------</span><span class="token comment">"设置显示／隐藏标签列表子窗口的快捷键。速记：identifier list by tag</span>nnoremap <span class="token operator">&lt;</span>Leader<span class="token operator">></span><span class="token keyword">t</span> <span class="token punctuation">:</span>TagbarToggle<span class="token operator">&lt;</span>CR<span class="token operator">></span><span class="token keyword">let</span> tagbar_right<span class="token operator">=</span><span class="token number">1</span>                                <span class="token comment">"设置tagbar 子窗口的位置出现在主编辑区的右边</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre></li><li><p><code>scrooloose/nerdcommenter</code><br> <strong>多行注释</strong><br> <strong>插件使用方法</strong>：</p> <pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">&lt;space&gt; +cc  #生成注释&lt;space&gt; +cu  #删除注释<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre></li><li><p><code>Xuyuanp/nerdtree-git-plugin</code><br> <strong>目录树添加git图标</strong></p> <pre class="line-numbers language-vim" data-language="vim"><code class="language-vim"><span class="token comment">" 开发的过程中，我们希望git信息直接在NERDTree中显示出来， 和Eclipse一样，修改的文件和增加的文件都给出相应的标注， 这时需要安   装的插件就是 nerdtree-git-plugin,配置信息如下</span><span class="token keyword">let</span> g<span class="token punctuation">:</span>NERDTreeGitStatusIndicatorMapCustom <span class="token operator">=</span> <span class="token punctuation">&#123;</span>    \ <span class="token string">"Modified"</span>  <span class="token punctuation">:</span> <span class="token string">"✹"</span><span class="token punctuation">,</span>    \ <span class="token string">"Staged"</span>    <span class="token punctuation">:</span> <span class="token string">"✚"</span><span class="token punctuation">,</span>    \ <span class="token string">"Untracked"</span> <span class="token punctuation">:</span> <span class="token string">"✭"</span><span class="token punctuation">,</span>    \ <span class="token string">"Renamed"</span>   <span class="token punctuation">:</span> <span class="token string">"➜"</span><span class="token punctuation">,</span>    \ <span class="token string">"Unmerged"</span>  <span class="token punctuation">:</span> <span class="token string">"═"</span><span class="token punctuation">,</span>    \ <span class="token string">"Deleted"</span>   <span class="token punctuation">:</span> <span class="token string">"✖"</span><span class="token punctuation">,</span>    \ <span class="token string">"Dirty"</span>     <span class="token punctuation">:</span> <span class="token string">"✗"</span><span class="token punctuation">,</span>    \ <span class="token string">"Clean"</span>     <span class="token punctuation">:</span> <span class="token string">"✔︎"</span><span class="token punctuation">,</span>    \ <span class="token string">"Unknown"</span>   <span class="token punctuation">:</span> <span class="token string">"?"</span>    \ <span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p><code>scrooloose/nerdtree</code><br> <strong>添加目录树</strong><br> <strong>vimrc配置</strong>  </p> <pre class="line-numbers language-vim" data-language="vim"><code class="language-vim"><span class="token comment">"------------NERDTree------------</span><span class="token comment">" 使用 NERDTree 插件查看工程文件。设置快捷键，速记：file list</span>nmap <span class="token operator">&lt;</span>Leader<span class="token operator">></span><span class="token keyword">f</span> <span class="token punctuation">:</span>NERDTreeToggle<span class="token operator">&lt;</span>CR<span class="token operator">></span><span class="token keyword">let</span> NERDTreeChDirMode<span class="token operator">=</span><span class="token number">1</span><span class="token string">"显示书签"</span><span class="token keyword">let</span> NERDTreeShowBookmarks<span class="token operator">=</span><span class="token number">1</span><span class="token string">"设置忽略文件类型"</span><span class="token keyword">let</span> NERDTreeIgnore<span class="token operator">=</span><span class="token punctuation">[</span><span class="token string">'\~$'</span><span class="token punctuation">,</span> <span class="token string">'\.pyc$'</span><span class="token punctuation">,</span> <span class="token string">'\.swp$'</span><span class="token punctuation">]</span><span class="token string">"窗口大小"</span><span class="token keyword">let</span> NERDTreeWinSize<span class="token operator">=</span><span class="token number">35</span><span class="token comment">" 修改默认箭头</span><span class="token keyword">let</span> g<span class="token punctuation">:</span>NERDTreeDirArrowExpandable <span class="token operator">=</span> <span class="token string">'▸'</span><span class="token keyword">let</span> g<span class="token punctuation">:</span>NERDTreeDirArrowCollapsible <span class="token operator">=</span> <span class="token string">'▾'</span><span class="token comment">"How can I open a NERDTree automatically when vim starts up if no files were specified?</span><span class="token builtin">autocmd</span> StdinReadPre <span class="token operator">*</span> <span class="token keyword">let</span> s<span class="token punctuation">:</span>std_in<span class="token operator">=</span><span class="token number">1</span><span class="token builtin">autocmd</span> VimEnter <span class="token operator">*</span> <span class="token keyword">if</span> <span class="token function">argc</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token number">0</span> <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span><span class="token function">exists</span><span class="token punctuation">(</span><span class="token string">"s:std_in"</span><span class="token punctuation">)</span> | NERDTree | <span class="token keyword">endif</span><span class="token comment">" 打开vim时自动打开NERDTree</span><span class="token comment">" autocmd vimenter * NERDTree</span><span class="token comment">"How can I open NERDTree automatically when vim starts up on opening a directory?</span><span class="token builtin">autocmd</span> StdinReadPre <span class="token operator">*</span> <span class="token keyword">let</span> s<span class="token punctuation">:</span>std_in<span class="token operator">=</span><span class="token number">1</span><span class="token builtin">autocmd</span> VimEnter <span class="token operator">*</span> <span class="token keyword">if</span> <span class="token function">argc</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token number">1</span> <span class="token operator">&amp;&amp;</span> <span class="token function">isdirectory</span><span class="token punctuation">(</span><span class="token function">argv</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span><span class="token function">exists</span><span class="token punctuation">(</span><span class="token string">"s:std_in"</span><span class="token punctuation">)</span> | exe <span class="token string">'NERDTree'</span> <span class="token function">argv</span><span class="token punctuation">(</span><span class="token punctuation">)</span>   <span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> | <span class="token keyword">wincmd</span> <span class="token keyword">p</span> | <span class="token keyword">ene</span> | <span class="token keyword">endif</span><span class="token comment">" 关闭vim时，如果打开的文件除了NERDTree没有其他文件时，它自动关闭，减少多次按:q!</span><span class="token builtin">autocmd</span> bufenter <span class="token operator">*</span> <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">winnr</span><span class="token punctuation">(</span><span class="token string">"$"</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token number">1</span> <span class="token operator">&amp;&amp;</span> <span class="token function">exists</span><span class="token punctuation">(</span><span class="token string">"b:NERDTree"</span><span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> <span class="token keyword">b</span><span class="token punctuation">:</span>NERDTree<span class="token operator">.</span><span class="token function">isTabTree</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> | <span class="token keyword">q</span> | <span class="token keyword">endif</span><span class="token comment">" 显示行号</span><span class="token comment">"let NERDTreeShowLineNumbers=1</span><span class="token keyword">let</span> NERDTreeAutoCenter<span class="token operator">=</span><span class="token number">1</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p> <strong>使用插件</strong></p> <pre class="line-numbers language-txt" data-language="txt"><code class="language-txt">&lt;sapce> + f: 自定义启用/隐藏目录树?: 快速帮助文档o: 打开一个目录或者打开文件，创建的是buffer，也可以用来打开书签go: 打开一个文件，但是光标仍然留在NERDTree，创建的是buffert: 打开一个文件，创建的是Tab，对书签同样生效T: 打开一个文件，但是光标仍然留在NERDTree，创建的是Tab，对书签同样生效i: 水平分割创建文件的窗口，创建的是buffergi: 水平分割创建文件的窗口，但是光标仍然留在NERDTrees: 垂直分割创建文件的窗口，创建的是buffergs: 和gi，go类似x: 收起当前打开的目录X: 收起所有打开的目录e: 以文件管理的方式打开选中的目录D: 删除书签P: 大写，跳转到当前根路径p: 小写，跳转到光标所在的上一级路径K: 跳转到第一个子路径J: 跳转到最后一个子路径&lt;C-j>和&lt;C-k>: 在同级目录和文件间移动，忽略子目录和子文件C: 将根路径设置为光标所在的目录u: 设置上级目录为根路径U: 设置上级目录为跟路径，但是维持原来目录打开的状态r: 刷新光标所在的目录R: 刷新当前根路径I: 显示或者不显示隐藏文件f: 打开和关闭文件过滤器q: 关闭NERDTreeA: 全屏显示NERDTree，或者关闭全屏<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p><code>tpope/vim-fugitive</code><br> VIM CMD 模式中使用git命令，和普通命令一样，但是需要大写G;也有特定的命令:</p><table><thead><tr><th align="left">git</th><th align="left">fugitive</th><th align="center">action</th></tr></thead><tbody><tr><td align="left">:Git add %</td><td align="left">:Gwrite</td><td align="center">Stage the current file to the index</td></tr><tr><td align="left">:Git checkout %</td><td align="left">:Gread</td><td align="center">Revert current file to last checked in version</td></tr><tr><td align="left">:Git rm %</td><td align="left">:Gremove</td><td align="center">Delete the current file and the corresponding Vim buffer</td></tr><tr><td align="left">:Git mv %</td><td align="left">:Gmove</td><td align="center">Rename the current file and the corresponding Vim buffer</td></tr><tr><td align="left"><strong>Git –&gt; : –&gt; G</strong></td><td align="left"></td><td align="center"></td></tr></tbody></table></li><li><p><code>ctrlpvim/ctrlp.vim</code><br> <strong>搜索历史打开文件，在normal模式下按ctrl+p触发</strong><br> <strong>使用方式：</strong></p> <pre class="line-numbers language-vim" data-language="vim"><code class="language-vim">Press <span class="token operator">&lt;</span>F5<span class="token operator">></span> <span class="token keyword">to</span> purge the cache <span class="token keyword">for</span> the current <span class="token builtin">directory</span> <span class="token keyword">to</span> get <span class="token keyword">new</span> <span class="token keyword">files</span><span class="token punctuation">,</span> remove deleted <span class="token keyword">files</span> and apply <span class="token keyword">new</span> ignore <span class="token keyword">options</span><span class="token operator">.</span>Press <span class="token operator">&lt;</span><span class="token keyword">c</span><span class="token operator">-</span><span class="token keyword">f</span><span class="token operator">></span> and <span class="token operator">&lt;</span><span class="token keyword">c</span><span class="token operator">-</span><span class="token keyword">b</span><span class="token operator">></span> <span class="token keyword">to</span> cycle between modes<span class="token operator">.</span>Press <span class="token operator">&lt;</span><span class="token keyword">c</span><span class="token operator">-</span><span class="token keyword">d</span><span class="token operator">></span> <span class="token keyword">to</span> switch <span class="token keyword">to</span> filename <span class="token keyword">only</span> search instead of full <span class="token builtin">path</span><span class="token operator">.</span>Press <span class="token operator">&lt;</span><span class="token keyword">c</span><span class="token operator">-</span><span class="token keyword">r</span><span class="token operator">></span> <span class="token keyword">to</span> switch <span class="token keyword">to</span> regexp <span class="token keyword">mode</span><span class="token operator">.</span>Use <span class="token operator">&lt;</span><span class="token keyword">c</span><span class="token operator">-</span><span class="token keyword">j</span><span class="token operator">></span><span class="token punctuation">,</span> <span class="token operator">&lt;</span><span class="token keyword">c</span><span class="token operator">-</span><span class="token keyword">k</span><span class="token operator">></span> or the arrow keys <span class="token keyword">to</span> navigate the result <span class="token keyword">list</span><span class="token operator">.</span>Use <span class="token operator">&lt;</span><span class="token keyword">c</span><span class="token operator">-</span><span class="token keyword">t</span><span class="token operator">></span> or <span class="token operator">&lt;</span><span class="token keyword">c</span><span class="token operator">-</span>v<span class="token operator">></span><span class="token punctuation">,</span> <span class="token operator">&lt;</span><span class="token keyword">c</span><span class="token operator">-</span><span class="token keyword">x</span><span class="token operator">></span> <span class="token keyword">to</span> <span class="token keyword">open</span> the selected entry <span class="token keyword">in</span> a <span class="token keyword">new</span> <span class="token keyword">tab</span> or <span class="token keyword">in</span> a <span class="token keyword">new</span> <span class="token keyword">split</span><span class="token operator">.</span>Use <span class="token operator">&lt;</span><span class="token keyword">c</span><span class="token operator">-</span><span class="token keyword">n</span><span class="token operator">></span><span class="token punctuation">,</span> <span class="token operator">&lt;</span><span class="token keyword">c</span><span class="token operator">-</span><span class="token keyword">p</span><span class="token operator">></span> <span class="token keyword">to</span> select the <span class="token keyword">next</span><span class="token operator">/</span><span class="token keyword">previous</span> string <span class="token keyword">in</span> the <span class="token builtin">prompt</span>'s <span class="token keyword">history</span><span class="token operator">.</span>Use <span class="token operator">&lt;</span><span class="token keyword">c</span><span class="token operator">-</span><span class="token keyword">y</span><span class="token operator">></span> <span class="token keyword">to</span> create a <span class="token keyword">new</span> <span class="token keyword">file</span> and its parent directories<span class="token operator">.</span>Use <span class="token operator">&lt;</span><span class="token keyword">c</span><span class="token operator">-</span>z<span class="token operator">></span> <span class="token keyword">to</span> <span class="token keyword">mark</span><span class="token operator">/</span>unmark multiple <span class="token keyword">files</span> and <span class="token operator">&lt;</span><span class="token keyword">c</span><span class="token operator">-</span><span class="token keyword">o</span><span class="token operator">></span> <span class="token keyword">to</span> <span class="token keyword">open</span> them<span class="token operator">.</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p><code>Lokaltog/vim-easymotion</code><br> <strong>快速跳转，按两下leader键和f组合,查找单个字符，然后快速跳转</strong></p></li><li><p><code>vim-scripts/ShowTrailingWhitespace.git</code><br> <strong>高亮显示行尾的多余空白字符</strong></p></li><li><p><code>kshenoy/vim-signature</code><br> <strong>书签可视化的插件</strong></p> <pre class="line-numbers language-vim" data-language="vim"><code class="language-vim"><span class="token keyword">let</span> g<span class="token punctuation">:</span>SignatureMap <span class="token operator">=</span> <span class="token punctuation">&#123;</span>     \ <span class="token string">'Leader'</span>             <span class="token punctuation">:</span>  <span class="token string">"m"</span><span class="token punctuation">,</span>     \ <span class="token string">'PlaceNextMark'</span>      <span class="token punctuation">:</span>  <span class="token string">"m,"</span><span class="token punctuation">,</span>     \ <span class="token string">'ToggleMarkAtLine'</span>   <span class="token punctuation">:</span>  <span class="token string">"m."</span><span class="token punctuation">,</span>     \ <span class="token string">'PurgeMarksAtLine'</span>   <span class="token punctuation">:</span>  <span class="token string">"m-"</span><span class="token punctuation">,</span>     \ <span class="token string">'DeleteMark'</span>         <span class="token punctuation">:</span>  <span class="token string">"dm"</span><span class="token punctuation">,</span>     \ <span class="token string">'PurgeMarks'</span>         <span class="token punctuation">:</span>  <span class="token string">"mda"</span><span class="token punctuation">,</span>     \ <span class="token string">'PurgeMarkers'</span>       <span class="token punctuation">:</span>  <span class="token string">"m&lt;BS>"</span><span class="token punctuation">,</span>     \ <span class="token string">'GotoNextLineAlpha'</span>  <span class="token punctuation">:</span>  <span class="token string">"']"</span><span class="token punctuation">,</span>     \ <span class="token string">'GotoPrevLineAlpha'</span>  <span class="token punctuation">:</span>  <span class="token string">"'["</span><span class="token punctuation">,</span>     \ <span class="token string">'GotoNextSpotAlpha'</span>  <span class="token punctuation">:</span>  <span class="token string">"`]"</span><span class="token punctuation">,</span>     \ <span class="token string">'GotoPrevSpotAlpha'</span>  <span class="token punctuation">:</span>  <span class="token string">"`["</span><span class="token punctuation">,</span>     \ <span class="token string">'GotoNextLineByPos'</span>  <span class="token punctuation">:</span>  <span class="token string">"]'"</span><span class="token punctuation">,</span>     \ <span class="token string">'GotoPrevLineByPos'</span>  <span class="token punctuation">:</span>  <span class="token string">"['"</span><span class="token punctuation">,</span>     \ <span class="token string">'GotoNextSpotByPos'</span>  <span class="token punctuation">:</span>  <span class="token string">"mn"</span><span class="token punctuation">,</span>     \ <span class="token string">'GotoPrevSpotByPos'</span>  <span class="token punctuation">:</span>  <span class="token string">"mp"</span><span class="token punctuation">,</span>     \ <span class="token string">'GotoNextMarker'</span>     <span class="token punctuation">:</span>  <span class="token string">"[+"</span><span class="token punctuation">,</span>     \ <span class="token string">'GotoPrevMarker'</span>     <span class="token punctuation">:</span>  <span class="token string">"[-"</span><span class="token punctuation">,</span>     \ <span class="token string">'GotoNextMarkerAny'</span>  <span class="token punctuation">:</span>  <span class="token string">"]="</span><span class="token punctuation">,</span>     \ <span class="token string">'GotoPrevMarkerAny'</span>  <span class="token punctuation">:</span>  <span class="token string">"[="</span><span class="token punctuation">,</span>     \ <span class="token string">'ListLocalMarks'</span>     <span class="token punctuation">:</span>  <span class="token string">"ms"</span><span class="token punctuation">,</span>     \ <span class="token string">'ListLocalMarkers'</span>   <span class="token punctuation">:</span>  <span class="token string">"m?"</span>     \ <span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p><code>vim-scripts/BOOKMARKS--Mark-and-Highlight-Full-Lines</code><br> <strong>书签行高亮</strong></p></li><li><p><code>vim-scripts/Solarized.git</code><br> <strong>主题方案</strong></p> <pre class="line-numbers language-vim" data-language="vim"><code class="language-vim"><span class="token keyword">if</span> <span class="token function">has</span><span class="token punctuation">(</span><span class="token string">"gui_running"</span><span class="token punctuation">)</span>    <span class="token keyword">set</span> <span class="token builtin">guioptions</span><span class="token operator">=</span>gR    <span class="token keyword">set</span> <span class="token builtin">mousemodel</span><span class="token operator">=</span><span class="token keyword">popup</span>    <span class="token keyword">set</span> <span class="token builtin">background</span><span class="token operator">=</span>light    <span class="token string">""</span><span class="token builtin">hi</span> LineNr cterm<span class="token operator">=</span>bold guibg<span class="token operator">=</span>black guifg<span class="token operator">=</span>white    <span class="token string">""</span><span class="token builtin">hi</span> CursorLine cterm<span class="token operator">=</span>none ctermbg<span class="token operator">=</span>lightgray ctermfg<span class="token operator">=</span>none    <span class="token string">""</span><span class="token builtin">hi</span> CursorColumn cterm<span class="token operator">=</span>none ctermbg<span class="token operator">=</span>lightgray ctermfg<span class="token operator">=</span>none<span class="token keyword">else</span>    <span class="token keyword">set</span> <span class="token builtin">background</span><span class="token operator">=</span>dark    <span class="token string">""</span><span class="token builtin">hi</span> LineNr cterm<span class="token operator">=</span>bold ctermbg<span class="token operator">=</span>black ctermfg<span class="token operator">=</span>white    <span class="token string">""</span><span class="token builtin">hi</span> CursorLine cterm<span class="token operator">=</span>none ctermbg<span class="token operator">=</span>darkgray ctermfg<span class="token operator">=</span>none    <span class="token string">""</span><span class="token builtin">hi</span> CursorColumn cterm<span class="token operator">=</span>none ctermbg<span class="token operator">=</span>darkgray ctermfg<span class="token operator">=</span>none<span class="token keyword">endif</span><span class="token punctuation">:</span><span class="token keyword">silent</span><span class="token operator">!</span> <span class="token keyword">colorscheme</span> solarized<span class="token comment">"colorscheme default</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p><code>nathanaelkane/vim-indent-guides.git</code><br> <strong>缩进对齐显示</strong><br> &lt;Leader&gt; + sj : 开/关缩进可视化</p> <pre class="line-numbers language-vim" data-language="vim"><code class="language-vim"><span class="token comment">" indent guides</span><span class="token comment">"let g:indent_guides_enable_on_vim_startup=1</span><span class="token comment">" 从第二层开始可视化显示缩进</span><span class="token keyword">let</span> g<span class="token punctuation">:</span>indent_guides_start_level<span class="token operator">=</span><span class="token number">2</span><span class="token comment">"let g:indent_guides_auto_colors = 0</span><span class="token comment">"hi IndentGuidesOdd  guibg=red   ctermbg=3</span><span class="token comment">"hi IndentGuidesEven guibg=green ctermbg=4</span><span class="token comment">" 色块宽度</span><span class="token keyword">let</span> g<span class="token punctuation">:</span>indent_guides_guide_size<span class="token operator">=</span><span class="token number">1</span><span class="token comment">" 快捷键 &lt;Leader>sj 开/关缩进可视化</span><span class="token builtin">noremap</span> <span class="token operator">&lt;</span>Leader<span class="token operator">></span><span class="token builtin">sj</span> <span class="token punctuation">:</span>IndentGuidesToggle<span class="token operator">&lt;</span>CR<span class="token operator">></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p><code>vim-scripts/Markdown</code><br> <strong>Markdown语法高亮</strong></p></li><li><p><code>ekalinin/Dockerfile.vim</code><br> <strong>Dockerfile语法高亮</strong></p></li><li><p><code>Valloric/YouCompleteMe</code><br> 自动补全插件,通过Vundle安装后，还需要手动编译<br> <strong>安装YCM</strong></p> <pre class="line-numbers language-vim" data-language="vim"><code class="language-vim"># 官方推荐使用Vundle安装，只需将下面命令加入到~<span class="token operator">/</span><span class="token operator">.</span>vimrcPlugin <span class="token string">'Valloric/YouCompleteMe'</span># 如果`<span class="token punctuation">:</span>PluginInstall`过程出错，则退出重新尝试，或者直接从git上下载到`～<span class="token operator">/</span><span class="token operator">.</span><span class="token keyword">vim</span><span class="token operator">/</span>bundle<span class="token operator">/</span>YouCompleteMe` 目录下git clone https<span class="token punctuation">:</span><span class="token operator">/</span><span class="token operator">/</span>github<span class="token operator">.</span><span class="token builtin">com</span><span class="token operator">/</span>Valloric<span class="token operator">/</span>YouCompleteMe#full<span class="token operator">-</span>installation<span class="token operator">-</span>guide ～<span class="token operator">/</span><span class="token operator">.</span><span class="token keyword">vim</span><span class="token operator">/</span>bundle<span class="token operator">/</span>YouCompleteMe<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p> <strong>编译YCM</strong></p> <pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">cd ~&#x2F;.vim&#x2F;bundle&#x2F;YouCompleteMegit submodule update --init --recursivepython3 install.py<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p> <strong>配置YCM</strong></p> <pre class="line-numbers language-vim" data-language="vim"><code class="language-vim"><span class="token comment">" 补全菜单的开启与关闭</span><span class="token keyword">set</span> <span class="token builtin">completeopt</span><span class="token operator">=</span>longest<span class="token punctuation">,</span>menu                    <span class="token comment">" 让Vim的补全菜单行为与一般IDE一致(参考VimTip1228)</span><span class="token keyword">let</span> g<span class="token punctuation">:</span>ycm_min_num_of_chars_for_completion<span class="token operator">=</span><span class="token number">2</span>             <span class="token comment">" 从第2个键入字符就开始罗列匹配项</span><span class="token keyword">let</span> g<span class="token punctuation">:</span>ycm_cache_omnifunc<span class="token operator">=</span><span class="token number">0</span>                      <span class="token comment">" 禁止缓存匹配项,每次都重新生成匹配项</span><span class="token keyword">let</span> g<span class="token punctuation">:</span>ycm_autoclose_preview_window_after_completion<span class="token operator">=</span><span class="token number">1</span>       <span class="token comment">" 智能关闭自动补全窗口</span><span class="token builtin">autocmd</span> InsertLeave <span class="token operator">*</span> <span class="token keyword">if</span> <span class="token function">pumvisible</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token number">0</span>|<span class="token keyword">pclose</span>|<span class="token keyword">endif</span>         <span class="token comment">" 离开插入模式后自动关闭预览窗口</span><span class="token comment">" 补全菜单中各项之间进行切换和选取：默认使用tab  s-tab进行上下切换，使用空格选取。可进行自定义设置：</span><span class="token comment">"let g:ycm_key_list_select_completion=[</span><span class="token string">'&lt;c-n>'</span><span class="token punctuation">]</span><span class="token string">"let g:ycm_key_list_select_completion = ['&lt;Down>']      "</span> 通过上下键在补全菜单中进行切换<span class="token comment">"let g:ycm_key_list_previous_completion=[</span><span class="token string">'&lt;c-p>'</span><span class="token punctuation">]</span><span class="token comment">"let g:ycm_key_list_previous_completion = [</span><span class="token string">'&lt;Up>'</span><span class="token punctuation">]</span><span class="token comment">" 回车即选中补全菜单中的当前项</span>inoremap <span class="token operator">&lt;</span>expr<span class="token operator">></span> <span class="token operator">&lt;</span>CR<span class="token operator">></span> <span class="token function">pumvisible</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">?</span> <span class="token string">"\&lt;C-y>"</span> <span class="token punctuation">:</span> <span class="token string">"\&lt;CR>"</span><span class="token comment">" 开启各种补全引擎</span><span class="token keyword">let</span> g<span class="token punctuation">:</span>ycm_collect_identifiers_from_tags_files<span class="token operator">=</span><span class="token number">1</span>         <span class="token comment">" 开启 YCM 基于标签引擎</span><span class="token keyword">let</span> g<span class="token punctuation">:</span>ycm_auto_trigger <span class="token operator">=</span> <span class="token number">1</span>                  <span class="token comment">" 开启 YCM 基于标识符补全，默认为1</span><span class="token keyword">let</span> g<span class="token punctuation">:</span>ycm_seed_identifiers_with_syntax<span class="token operator">=</span><span class="token number">1</span>                <span class="token comment">" 开启 YCM 基于语法关键字补全</span><span class="token keyword">let</span> g<span class="token punctuation">:</span>ycm_complete_in_comments <span class="token operator">=</span> <span class="token number">1</span>              <span class="token comment">" 在注释输入中也能补全</span><span class="token keyword">let</span> g<span class="token punctuation">:</span>ycm_complete_in_strings <span class="token operator">=</span> <span class="token number">1</span>               <span class="token comment">" 在字符串输入中也能补全</span><span class="token keyword">let</span> g<span class="token punctuation">:</span>ycm_collect_identifiers_from_comments_and_strings <span class="token operator">=</span> <span class="token number">0</span> <span class="token comment">" 注释和字符串中的文字也会被收入补全</span><span class="token comment">" 重映射快捷键</span><span class="token comment">"上下左右键的行为 会显示其他信息,inoremap由i 插入模式和noremap不重映射组成，只映射一层，不会映射到映射的映射</span>inoremap <span class="token operator">&lt;</span>expr<span class="token operator">></span> <span class="token operator">&lt;</span>Down<span class="token operator">></span>     <span class="token function">pumvisible</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">?</span> <span class="token string">"\&lt;C-n>"</span> <span class="token punctuation">:</span> <span class="token string">"\&lt;Down>"</span>inoremap <span class="token operator">&lt;</span>expr<span class="token operator">></span> <span class="token operator">&lt;</span>Up<span class="token operator">></span>       <span class="token function">pumvisible</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">?</span> <span class="token string">"\&lt;C-p>"</span> <span class="token punctuation">:</span> <span class="token string">"\&lt;Up>"</span>inoremap <span class="token operator">&lt;</span>expr<span class="token operator">></span> <span class="token operator">&lt;</span>PageDown<span class="token operator">></span> <span class="token function">pumvisible</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">?</span> <span class="token string">"\&lt;PageDown>\&lt;C-p>\&lt;C-n>"</span> <span class="token punctuation">:</span> <span class="token string">"\&lt;PageDown>"</span>inoremap <span class="token operator">&lt;</span>expr<span class="token operator">></span> <span class="token operator">&lt;</span>PageUp<span class="token operator">></span>   <span class="token function">pumvisible</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">?</span> <span class="token string">"\&lt;PageUp>\&lt;C-p>\&lt;C-n>"</span> <span class="token punctuation">:</span> <span class="token string">"\&lt;PageUp>"</span><span class="token string">"nnoremap &lt;F5> :YcmForceCompileAndDiagnostics&lt;CR>           "</span> force recomile with syntastic<span class="token string">"nnoremap &lt;leader>lo :lopen&lt;CR>    "</span><span class="token keyword">open</span> locationlist<span class="token string">"nnoremap &lt;leader>lc :lclose&lt;CR>    "</span><span class="token keyword">close</span> locationlist<span class="token comment">"inoremap &lt;leader>&lt;leader> &lt;C-x>&lt;C-o></span>nnoremap <span class="token operator">&lt;</span>leader<span class="token operator">></span>jd <span class="token punctuation">:</span>YcmCompleter GoToDefinitionElseDeclaration<span class="token operator">&lt;</span>CR<span class="token operator">></span> <span class="token comment">" 跳转到定义处</span><span class="token keyword">let</span> g<span class="token punctuation">:</span>ycm_confirm_extra_conf<span class="token operator">=</span><span class="token number">0</span>                  <span class="token comment">" 关闭加载.ycm_extra_conf.py确认提示</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p><code>luochen1990/rainbow</code><br> <strong>彩虹括号</strong></p> <pre class="line-numbers language-vim" data-language="vim"><code class="language-vim"><span class="token keyword">let</span> g<span class="token punctuation">:</span>rainbow_active <span class="token operator">=</span> <span class="token number">1</span> <span class="token comment">"0 if you want to enable it later via :RainbowToggle</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li><p><code>vim-scripts/indentpython.vim</code><br> <strong>python 自动缩进</strong></p></li><li><p><code>tell-k/vim-autopep8</code><br> <strong>python代码自动格式化为符合pep8标准</strong></p> <pre class="line-numbers language-vim" data-language="vim"><code class="language-vim"><span class="token comment">" 按照PEP8标准来配置vim</span>au BufNewFile<span class="token punctuation">,</span>BufRead <span class="token operator">*</span><span class="token operator">.</span><span class="token keyword">py</span> <span class="token keyword">set</span> <span class="token builtin">tabstop</span><span class="token operator">=</span><span class="token number">4</span> |<span class="token keyword">set</span> <span class="token builtin">softtabstop</span><span class="token operator">=</span><span class="token number">4</span>|<span class="token keyword">set</span> <span class="token builtin">shiftwidth</span><span class="token operator">=</span><span class="token number">4</span>|<span class="token keyword">set</span> <span class="token builtin">textwidth</span><span class="token operator">=</span><span class="token number">79</span>|<span class="token keyword">set</span> <span class="token builtin">expandtab</span>|<span class="token keyword">set</span> <span class="token builtin">autoindent</span>|<span class="token keyword">set</span> <span class="token builtin">fileformat</span><span class="token operator">=</span>unix<span class="token comment">" Disable show diff window</span><span class="token keyword">let</span> g<span class="token punctuation">:</span>autopep8_disable_show_diff<span class="token operator">=</span><span class="token number">1</span><span class="token comment">" vim-autopep8自1.11版本之后取消了F8快捷键，需要用户自己为:Autopep8设置快捷键：</span><span class="token builtin">autocmd</span> FileType <span class="token keyword">python</span> <span class="token builtin">noremap</span> <span class="token operator">&lt;</span><span class="token keyword">buffer</span><span class="token operator">></span> <span class="token operator">&lt;</span>F8<span class="token operator">></span> <span class="token punctuation">:</span><span class="token keyword">call</span> <span class="token function">Autopep8</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">&lt;</span>CR<span class="token operator">></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p><code>ryanoasis/vim-devicons</code><br> <strong>Adds file type icons to Vim plugins such as: NERDTree, vim-airline, CtrlP, unite, Denite, lightline, vim-startify and many more</strong></p></li></ul><h2 id="配置完成的VIM"><a href="#配置完成的VIM" class="headerlink" title="配置完成的VIM"></a>配置完成的VIM</h2><p><img src="https://raw.githubusercontent.com/dFarui/images/master/vim.png" alt="vim"></p><p><img src="https://raw.githubusercontent.com/dFarui/images/master/vim1.png" alt="vim1"></p><h2 id="完整的configure"><a href="#完整的configure" class="headerlink" title="完整的configure"></a>完整的configure</h2><h3 id="vimrc"><a href="#vimrc" class="headerlink" title="vimrc"></a>vimrc</h3><pre class="line-numbers language-vim" data-language="vim"><code class="language-vim"><span class="token comment">" 开启文件类型侦测</span><span class="token keyword">filetype</span> <span class="token keyword">on</span><span class="token comment">" 根据侦测到的不同类型加载对应的插件</span><span class="token keyword">filetype</span> plugin <span class="token keyword">on</span><span class="token comment">" 设置外观 -------------------------------------</span><span class="token string">"set number                      "</span>显示行号<span class="token keyword">set</span> <span class="token builtin">showtabline</span><span class="token operator">=</span><span class="token number">0</span>               <span class="token string">"隐藏顶部标签栏"</span><span class="token keyword">set</span> <span class="token builtin">guioptions</span><span class="token operator">-=</span><span class="token keyword">r</span>               <span class="token string">"隐藏右侧滚动条"</span><span class="token keyword">set</span> <span class="token builtin">guioptions</span><span class="token operator">-=</span>L               <span class="token string">"隐藏左侧滚动条"</span><span class="token keyword">set</span> <span class="token builtin">guioptions</span><span class="token operator">-=</span><span class="token keyword">b</span>               <span class="token string">"隐藏底部滚动条"</span><span class="token keyword">set</span> <span class="token builtin">cursorline</span>                  <span class="token string">"突出显示当前行"</span><span class="token string">"set cursorcolumn                "</span>突出显示当前列<span class="token comment">"</span><span class="token comment">" 变成辅助 -------------------------------------</span><span class="token builtin">syntax</span> <span class="token keyword">on</span>                           <span class="token comment">"开启语法高亮</span><span class="token keyword">set</span> <span class="token builtin">nowrap</span>                      <span class="token string">"设置代码不折行"</span><span class="token keyword">set</span> <span class="token builtin">fileformat</span><span class="token operator">=</span>unix             <span class="token string">"设置以unix的格式保存文件"</span><span class="token keyword">set</span> <span class="token builtin">cindent</span>                     <span class="token string">"设置C样式的缩进格式"</span><span class="token keyword">set</span> <span class="token builtin">tabstop</span><span class="token operator">=</span><span class="token number">4</span>                   <span class="token comment">"一个 tab 显示出来是多少个空格，默认 8</span><span class="token keyword">set</span> <span class="token builtin">shiftwidth</span><span class="token operator">=</span><span class="token number">4</span>                <span class="token comment">"每一级缩进是多少个空格</span><span class="token keyword">set</span> <span class="token builtin">backspace</span><span class="token operator">+=</span>indent<span class="token punctuation">,</span><span class="token builtin">eol</span><span class="token punctuation">,</span>start <span class="token comment">"set backspace&amp;可以对其重置</span><span class="token keyword">set</span> <span class="token builtin">showmatch</span>                   <span class="token string">"显示匹配的括号"</span><span class="token keyword">set</span> <span class="token builtin">scrolloff</span><span class="token operator">=</span><span class="token number">5</span>                 <span class="token string">"距离顶部和底部5行"</span><span class="token keyword">set</span> <span class="token builtin">laststatus</span><span class="token operator">=</span><span class="token number">2</span>                <span class="token string">"命令行为两行"</span><span class="token keyword">set</span> <span class="token builtin">ignorecase</span>                  <span class="token string">"忽略大小写"</span><span class="token keyword">set</span> <span class="token builtin">incsearch</span><span class="token keyword">set</span> <span class="token builtin">hlsearch</span>                    <span class="token string">"高亮搜索项"</span><span class="token keyword">set</span> <span class="token builtin">noexpandtab</span>                 <span class="token string">"不允许扩展table"</span><span class="token keyword">set</span> <span class="token builtin">whichwrap</span><span class="token operator">+=</span><span class="token operator">&lt;</span><span class="token punctuation">,</span><span class="token operator">></span><span class="token punctuation">,</span><span class="token keyword">h</span><span class="token punctuation">,</span><span class="token keyword">l</span><span class="token keyword">set</span> <span class="token builtin">autoread</span><span class="token comment">" 打开上次文件关闭的位置</span><span class="token keyword">if</span> <span class="token function">has</span><span class="token punctuation">(</span><span class="token string">"autocmd"</span><span class="token punctuation">)</span>    au BufReadPost <span class="token operator">*</span> <span class="token keyword">if</span> <span class="token function">line</span><span class="token punctuation">(</span><span class="token string">"'\""</span><span class="token punctuation">)</span> <span class="token operator">></span> <span class="token number">1</span> <span class="token operator">&amp;&amp;</span> <span class="token function">line</span><span class="token punctuation">(</span><span class="token string">"'\""</span><span class="token punctuation">)</span> <span class="token operator">&lt;=</span> <span class="token function">line</span><span class="token punctuation">(</span><span class="token string">"$"</span><span class="token punctuation">)</span> | exe <span class="token string">"normal! g'\""</span> | <span class="token keyword">endif</span><span class="token keyword">endif</span><span class="token comment">" *************** 设置全局快捷键 *****************</span><span class="token comment">" 定义快捷键的前缀，即&lt;Leader></span><span class="token string">"let mapleader="</span>\<span class="token operator">&lt;</span>space<span class="token operator">></span><span class="token comment">"</span><span class="token string">"let mapleader="</span>'<span class="token comment">"</span><span class="token keyword">let</span> mapleader<span class="token operator">=</span><span class="token string">"\&lt;space>"</span><span class="token comment">" 指定屏幕上可以进行分割布局的区域</span><span class="token keyword">set</span> <span class="token builtin">splitbelow</span>               <span class="token comment">" 允许在下部分割布局</span><span class="token keyword">set</span> <span class="token builtin">splitright</span>               <span class="token comment">" 允许在右侧分隔布局</span><span class="token comment">" 组合快捷键：</span><span class="token comment">" 组合快捷键：- Ctrl-j 切换到下方的分割窗口</span>nnoremap <span class="token operator">&lt;</span>Leader<span class="token operator">></span><span class="token keyword">j</span> <span class="token operator">&lt;</span>C<span class="token operator">-</span>W<span class="token operator">></span><span class="token keyword">j</span><span class="token comment">" 组合快捷键：- Ctrl-k 切换到上方的分割窗口</span>nnoremap <span class="token operator">&lt;</span>Leader<span class="token operator">></span><span class="token keyword">k</span> <span class="token operator">&lt;</span>C<span class="token operator">-</span>W<span class="token operator">></span><span class="token keyword">k</span><span class="token comment">" 组合快捷键：- Ctrl-l 切换到右侧的分割窗口</span>nnoremap <span class="token operator">&lt;</span>Leader<span class="token operator">></span><span class="token keyword">l</span> <span class="token operator">&lt;</span>C<span class="token operator">-</span>W<span class="token operator">></span><span class="token keyword">l</span><span class="token comment">" 组合快捷键：- Ctrl-h 切换到左侧的分割窗口</span>nnoremap <span class="token operator">&lt;</span>Leader<span class="token operator">></span><span class="token keyword">h</span> <span class="token operator">&lt;</span>C<span class="token operator">-</span>W<span class="token operator">></span><span class="token keyword">h</span><span class="token comment">" 设置快捷键将选中文本块复制至系统剪贴板</span>vnoremap <span class="token operator">&lt;</span>Leader<span class="token operator">></span><span class="token keyword">y</span> <span class="token comment">"+y</span><span class="token comment">" 设置快捷键将系统剪贴板内容粘贴至 vim</span>nmap <span class="token operator">&lt;</span>Leader<span class="token operator">></span><span class="token keyword">p</span> <span class="token comment">"+p</span><span class="token comment">" 定义快捷键关闭当前分割窗口</span>nmap <span class="token operator">&lt;</span>Leader<span class="token operator">></span><span class="token keyword">q</span> <span class="token punctuation">:</span><span class="token keyword">q</span><span class="token operator">&lt;</span>CR<span class="token operator">></span><span class="token comment">" 定义快捷键保存当前窗口内容</span>nmap <span class="token operator">&lt;</span>Leader<span class="token operator">></span><span class="token keyword">w</span> <span class="token punctuation">:</span><span class="token keyword">w</span><span class="token operator">&lt;</span>CR<span class="token operator">></span><span class="token comment">" 使用sudo强制保存文件</span>nmap <span class="token operator">&lt;</span>Leader<span class="token operator">></span>W <span class="token punctuation">:</span><span class="token keyword">w</span> <span class="token operator">!</span>sudo tee <span class="token operator">%</span><span class="token operator">&lt;</span>CR<span class="token operator">></span><span class="token comment">" ---------------------plugin--------------------------------------</span><span class="token keyword">set</span> <span class="token builtin">nocompatible</span>              <span class="token comment">" be iMproved, required</span><span class="token keyword">filetype</span> off                  <span class="token comment">" required</span><span class="token comment">" set the runtime path to include Vundle and initialize</span><span class="token keyword">set</span> <span class="token builtin">rtp</span><span class="token operator">+=</span>~<span class="token operator">/</span><span class="token operator">.</span><span class="token keyword">vim</span><span class="token operator">/</span>bundle<span class="token operator">/</span>Vundle<span class="token operator">.</span><span class="token keyword">vim</span><span class="token keyword">call</span> vundle#<span class="token function">begin</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token comment">" alternatively, pass a path where Vundle should install plugins</span><span class="token comment">"call vundle#begin(</span><span class="token string">'~/some/path/here'</span><span class="token punctuation">)</span><span class="token comment">" let Vundle manage Vundle, required</span>Plugin <span class="token string">'VundleVim/Vundle.vim'</span><span class="token comment">"status 美化</span>Plugin <span class="token string">'Lokaltog/vim-powerline'</span><span class="token comment">"taglist的增强版，查看标签，依赖于ctags</span>Plugin <span class="token string">'majutsushi/tagbar'</span><span class="token comment">"多行注释，leader键+cc生成, leader+cu删除注释</span>Plugin <span class="token string">'scrooloose/nerdcommenter'</span><span class="token comment">"文件浏览</span>Plugin <span class="token string">'scrooloose/nerdtree'</span><span class="token comment">"添加git状态图标</span>Plugin <span class="token string">'Xuyuanp/nerdtree-git-plugin'</span><span class="token comment">" vim use git</span>Plugin <span class="token string">'tpope/vim-fugitive'</span><span class="token comment">"搜索历史打开文件，在命令行模式下按ctrl+p触发</span><span class="token comment">"Plugin </span><span class="token string">'kien/ctrlp.vim'</span>Plugin <span class="token string">'ctrlpvim/ctrlp.vim'</span><span class="token comment">"快速跳转，按两下leader键和f组合</span>Plugin <span class="token string">'Lokaltog/vim-easymotion'</span><span class="token comment">"高亮显示行尾的多余空白字符</span>Plugin <span class="token string">'vim-scripts/ShowTrailingWhitespace.git'</span><span class="token comment">"书签可视化的插件</span>Plugin <span class="token string">'kshenoy/vim-signature'</span><span class="token comment">"书签行高亮</span>Plugin <span class="token string">'vim-scripts/BOOKMARKS--Mark-and-Highlight-Full-Lines'</span><span class="token comment">"主题方案</span>Plugin <span class="token string">'vim-scripts/Solarized.git'</span><span class="token comment">"缩进对齐显示</span>Plugin <span class="token string">'nathanaelkane/vim-indent-guides.git'</span><span class="token comment">" Markdown语法高亮</span>Plugin <span class="token string">'vim-scripts/Markdown'</span><span class="token comment">" Dockerfile语法高亮</span>Plugin <span class="token string">'ekalinin/Dockerfile.vim'</span><span class="token comment">" 自动补全</span>Plugin <span class="token string">'Valloric/YouCompleteMe'</span><span class="token comment">" 彩虹括号</span>Plugin <span class="token string">'luochen1990/rainbow'</span><span class="token comment">" python 自动缩进</span>Plugin <span class="token string">'vim-scripts/indentpython.vim'</span><span class="token comment">" python代码自动格式化为符合pep8标准</span>Plugin <span class="token string">'tell-k/vim-autopep8'</span>Plugin <span class="token string">'ryanoasis/vim-devicons'</span><span class="token keyword">call</span> vundle#<span class="token function">end</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token keyword">filetype</span> <span class="token keyword">on</span><span class="token comment">" 按照PEP8标准来配置vim</span>au BufNewFile<span class="token punctuation">,</span>BufRead <span class="token operator">*</span><span class="token operator">.</span><span class="token keyword">py</span> <span class="token keyword">set</span> <span class="token builtin">tabstop</span><span class="token operator">=</span><span class="token number">4</span> |<span class="token keyword">set</span> <span class="token builtin">softtabstop</span><span class="token operator">=</span><span class="token number">4</span>|<span class="token keyword">set</span> <span class="token builtin">shiftwidth</span><span class="token operator">=</span><span class="token number">4</span>|<span class="token keyword">set</span> <span class="token builtin">textwidth</span><span class="token operator">=</span><span class="token number">79</span>|<span class="token keyword">set</span> <span class="token builtin">expandtab</span>|<span class="token keyword">set</span> <span class="token builtin">autoindent</span>|<span class="token keyword">set</span> <span class="token builtin">fileformat</span><span class="token operator">=</span>unix<span class="token comment">" Disable show diff window</span><span class="token keyword">let</span> g<span class="token punctuation">:</span>autopep8_disable_show_diff<span class="token operator">=</span><span class="token number">1</span><span class="token comment">" vim-autopep8自1.11版本之后取消了F8快捷键，需要用户自己为:Autopep8设置快捷键：</span><span class="token builtin">autocmd</span> FileType <span class="token keyword">python</span> <span class="token builtin">noremap</span> <span class="token operator">&lt;</span><span class="token keyword">buffer</span><span class="token operator">></span> <span class="token operator">&lt;</span>F8<span class="token operator">></span> <span class="token punctuation">:</span><span class="token keyword">call</span> <span class="token function">Autopep8</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">&lt;</span>CR<span class="token operator">></span><span class="token keyword">let</span> g<span class="token punctuation">:</span>rainbow_active <span class="token operator">=</span> <span class="token number">1</span> <span class="token comment">"0 if you want to enable it later via :RainbowToggle</span><span class="token comment">" Powerline 设置</span><span class="token comment">" 设置状态栏主题风格</span><span class="token comment">" 将字体设置为Meslo LG S DZ Regular for Powerline 13号大小</span><span class="token keyword">set</span> <span class="token builtin">guifont</span><span class="token operator">=</span>Meslo\ LG\ S\ DZ\ Regular\ <span class="token keyword">for</span>\ Powerline<span class="token punctuation">:</span>h13<span class="token keyword">let</span> g<span class="token punctuation">:</span>Powerline_symbols <span class="token operator">=</span> <span class="token string">'fancy'</span>       <span class="token comment">" Powerline_symbols为状态栏中的箭头，unicode没有箭头</span><span class="token comment">"let g:Powerline_symbols= </span><span class="token string">'unicode'</span><span class="token keyword">set</span> <span class="token builtin">laststatus</span><span class="token operator">=</span><span class="token number">2</span>                <span class="token comment">" 必须设置为2,否则状态栏不显示</span><span class="token keyword">set</span> <span class="token builtin">t_Co</span><span class="token operator">=</span><span class="token number">256</span>                    <span class="token comment">" 开启256颜色之后，colorschema在vim里好看了许多</span><span class="token keyword">let</span> g<span class="token punctuation">:</span>Powerline_colorscheme<span class="token operator">=</span><span class="token string">'solarized256'</span>  <span class="token comment">" 状态栏使用了solarized256配色方案</span><span class="token comment">"------------tagbar--------</span><span class="token comment">"设置显示／隐藏标签列表子窗口的快捷键。速记：identifier list by tag</span>nnoremap <span class="token operator">&lt;</span>Leader<span class="token operator">></span><span class="token keyword">t</span> <span class="token punctuation">:</span>TagbarToggle<span class="token operator">&lt;</span>CR<span class="token operator">></span><span class="token keyword">let</span> tagbar_right<span class="token operator">=</span><span class="token number">1</span>                                <span class="token comment">"设置tagbar 子窗口的位置出现在主编辑区的右边</span><span class="token comment">"------------NERDTree------------</span><span class="token comment">" 使用 NERDTree 插件查看工程文件。设置快捷键，速记：file list</span>nmap <span class="token operator">&lt;</span>Leader<span class="token operator">></span><span class="token keyword">f</span> <span class="token punctuation">:</span>NERDTreeToggle<span class="token operator">&lt;</span>CR<span class="token operator">></span><span class="token keyword">let</span> NERDTreeChDirMode<span class="token operator">=</span><span class="token number">1</span><span class="token string">"显示书签"</span><span class="token keyword">let</span> NERDTreeShowBookmarks<span class="token operator">=</span><span class="token number">1</span><span class="token string">"设置忽略文件类型"</span><span class="token keyword">let</span> NERDTreeIgnore<span class="token operator">=</span><span class="token punctuation">[</span><span class="token string">'\~$'</span><span class="token punctuation">,</span> <span class="token string">'\.pyc$'</span><span class="token punctuation">,</span> <span class="token string">'\.swp$'</span><span class="token punctuation">]</span><span class="token string">"窗口大小"</span><span class="token keyword">let</span> NERDTreeWinSize<span class="token operator">=</span><span class="token number">25</span><span class="token comment">" 修改默认箭头</span><span class="token keyword">let</span> g<span class="token punctuation">:</span>NERDTreeDirArrowExpandable <span class="token operator">=</span> <span class="token string">'▸'</span><span class="token keyword">let</span> g<span class="token punctuation">:</span>NERDTreeDirArrowCollapsible <span class="token operator">=</span> <span class="token string">'▾'</span><span class="token comment">"How can I open a NERDTree automatically when vim starts up if no files were specified?</span><span class="token builtin">autocmd</span> StdinReadPre <span class="token operator">*</span> <span class="token keyword">let</span> s<span class="token punctuation">:</span>std_in<span class="token operator">=</span><span class="token number">1</span><span class="token builtin">autocmd</span> VimEnter <span class="token operator">*</span> <span class="token keyword">if</span> <span class="token function">argc</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token number">0</span> <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span><span class="token function">exists</span><span class="token punctuation">(</span><span class="token string">"s:std_in"</span><span class="token punctuation">)</span> | NERDTree | <span class="token keyword">endif</span><span class="token comment">" 打开vim时自动打开NERDTree</span><span class="token comment">" autocmd vimenter * NERDTree</span><span class="token comment">"How can I open NERDTree automatically when vim starts up on opening a directory?</span><span class="token builtin">autocmd</span> StdinReadPre <span class="token operator">*</span> <span class="token keyword">let</span> s<span class="token punctuation">:</span>std_in<span class="token operator">=</span><span class="token number">1</span><span class="token builtin">autocmd</span> VimEnter <span class="token operator">*</span> <span class="token keyword">if</span> <span class="token function">argc</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token number">1</span> <span class="token operator">&amp;&amp;</span> <span class="token function">isdirectory</span><span class="token punctuation">(</span><span class="token function">argv</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span><span class="token function">exists</span><span class="token punctuation">(</span><span class="token string">"s:std_in"</span><span class="token punctuation">)</span> | exe <span class="token string">'NERDTree'</span> <span class="token function">argv</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> | <span class="token keyword">wincmd</span> <span class="token keyword">p</span> | <span class="token keyword">ene</span> | <span class="token keyword">endif</span><span class="token comment">" 关闭vim时，如果打开的文件除了NERDTree没有其他文件时，它自动关闭，减少多次按:q!</span><span class="token builtin">autocmd</span> bufenter <span class="token operator">*</span> <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">winnr</span><span class="token punctuation">(</span><span class="token string">"$"</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token number">1</span> <span class="token operator">&amp;&amp;</span> <span class="token function">exists</span><span class="token punctuation">(</span><span class="token string">"b:NERDTree"</span><span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> <span class="token keyword">b</span><span class="token punctuation">:</span>NERDTree<span class="token operator">.</span><span class="token function">isTabTree</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> | <span class="token keyword">q</span> | <span class="token keyword">endif</span><span class="token comment">" 开发的过程中，我们希望git信息直接在NERDTree中显示出来， 和Eclipse一样，修改的文件和增加的文件都给出相应的标注， 这时需要安装的插件就是 nerdtree-git-plugin,配置信息如下</span><span class="token keyword">let</span> g<span class="token punctuation">:</span>NERDTreeGitStatusIndicatorMapCustom <span class="token operator">=</span> <span class="token punctuation">&#123;</span>    \ <span class="token string">"Modified"</span>  <span class="token punctuation">:</span> <span class="token string">"✹"</span><span class="token punctuation">,</span>    \ <span class="token string">"Staged"</span>    <span class="token punctuation">:</span> <span class="token string">"✚"</span><span class="token punctuation">,</span>    \ <span class="token string">"Untracked"</span> <span class="token punctuation">:</span> <span class="token string">"✭"</span><span class="token punctuation">,</span>    \ <span class="token string">"Renamed"</span>   <span class="token punctuation">:</span> <span class="token string">"➜"</span><span class="token punctuation">,</span>    \ <span class="token string">"Unmerged"</span>  <span class="token punctuation">:</span> <span class="token string">"═"</span><span class="token punctuation">,</span>    \ <span class="token string">"Deleted"</span>   <span class="token punctuation">:</span> <span class="token string">"✖"</span><span class="token punctuation">,</span>    \ <span class="token string">"Dirty"</span>     <span class="token punctuation">:</span> <span class="token string">"✗"</span><span class="token punctuation">,</span>    \ <span class="token string">"Clean"</span>     <span class="token punctuation">:</span> <span class="token string">"✔︎"</span><span class="token punctuation">,</span>    \ <span class="token string">"Unknown"</span>   <span class="token punctuation">:</span> <span class="token string">"?"</span>    \ <span class="token punctuation">&#125;</span><span class="token comment">" 显示行号</span><span class="token comment">"let NERDTreeShowLineNumbers=1</span><span class="token keyword">let</span> NERDTreeAutoCenter<span class="token operator">=</span><span class="token number">1</span><span class="token comment">"-------------------kshenoy/vim-signature-----------------------</span><span class="token comment">" signature设置</span><span class="token keyword">let</span> g<span class="token punctuation">:</span>SignatureMap <span class="token operator">=</span> <span class="token punctuation">&#123;</span>        \ <span class="token string">'Leader'</span>             <span class="token punctuation">:</span>  <span class="token string">"m"</span><span class="token punctuation">,</span>        \ <span class="token string">'PlaceNextMark'</span>      <span class="token punctuation">:</span>  <span class="token string">"m,"</span><span class="token punctuation">,</span>        \ <span class="token string">'ToggleMarkAtLine'</span>   <span class="token punctuation">:</span>  <span class="token string">"m."</span><span class="token punctuation">,</span>        \ <span class="token string">'PurgeMarksAtLine'</span>   <span class="token punctuation">:</span>  <span class="token string">"m-"</span><span class="token punctuation">,</span>        \ <span class="token string">'DeleteMark'</span>         <span class="token punctuation">:</span>  <span class="token string">"dm"</span><span class="token punctuation">,</span>        \ <span class="token string">'PurgeMarks'</span>         <span class="token punctuation">:</span>  <span class="token string">"mda"</span><span class="token punctuation">,</span>        \ <span class="token string">'PurgeMarkers'</span>       <span class="token punctuation">:</span>  <span class="token string">"m&lt;BS>"</span><span class="token punctuation">,</span>        \ <span class="token string">'GotoNextLineAlpha'</span>  <span class="token punctuation">:</span>  <span class="token string">"']"</span><span class="token punctuation">,</span>        \ <span class="token string">'GotoPrevLineAlpha'</span>  <span class="token punctuation">:</span>  <span class="token string">"'["</span><span class="token punctuation">,</span>        \ <span class="token string">'GotoNextSpotAlpha'</span>  <span class="token punctuation">:</span>  <span class="token string">"`]"</span><span class="token punctuation">,</span>        \ <span class="token string">'GotoPrevSpotAlpha'</span>  <span class="token punctuation">:</span>  <span class="token string">"`["</span><span class="token punctuation">,</span>        \ <span class="token string">'GotoNextLineByPos'</span>  <span class="token punctuation">:</span>  <span class="token string">"]'"</span><span class="token punctuation">,</span>        \ <span class="token string">'GotoPrevLineByPos'</span>  <span class="token punctuation">:</span>  <span class="token string">"['"</span><span class="token punctuation">,</span>        \ <span class="token string">'GotoNextSpotByPos'</span>  <span class="token punctuation">:</span>  <span class="token string">"mn"</span><span class="token punctuation">,</span>        \ <span class="token string">'GotoPrevSpotByPos'</span>  <span class="token punctuation">:</span>  <span class="token string">"mp"</span><span class="token punctuation">,</span>        \ <span class="token string">'GotoNextMarker'</span>     <span class="token punctuation">:</span>  <span class="token string">"[+"</span><span class="token punctuation">,</span>        \ <span class="token string">'GotoPrevMarker'</span>     <span class="token punctuation">:</span>  <span class="token string">"[-"</span><span class="token punctuation">,</span>        \ <span class="token string">'GotoNextMarkerAny'</span>  <span class="token punctuation">:</span>  <span class="token string">"]="</span><span class="token punctuation">,</span>        \ <span class="token string">'GotoPrevMarkerAny'</span>  <span class="token punctuation">:</span>  <span class="token string">"[="</span><span class="token punctuation">,</span>        \ <span class="token string">'ListLocalMarks'</span>     <span class="token punctuation">:</span>  <span class="token string">"ms"</span><span class="token punctuation">,</span>        \ <span class="token string">'ListLocalMarkers'</span>   <span class="token punctuation">:</span>  <span class="token string">"m?"</span>        \ <span class="token punctuation">&#125;</span><span class="token keyword">if</span> <span class="token function">has</span><span class="token punctuation">(</span><span class="token string">"gui_running"</span><span class="token punctuation">)</span>    <span class="token keyword">set</span> <span class="token builtin">guioptions</span><span class="token operator">=</span>gR    <span class="token keyword">set</span> <span class="token builtin">mousemodel</span><span class="token operator">=</span><span class="token keyword">popup</span>    <span class="token keyword">set</span> <span class="token builtin">background</span><span class="token operator">=</span>light    <span class="token string">""</span><span class="token builtin">hi</span> LineNr cterm<span class="token operator">=</span>bold guibg<span class="token operator">=</span>black guifg<span class="token operator">=</span>white    <span class="token string">""</span><span class="token builtin">hi</span> CursorLine cterm<span class="token operator">=</span>none ctermbg<span class="token operator">=</span>lightgray ctermfg<span class="token operator">=</span>none    <span class="token string">""</span><span class="token builtin">hi</span> CursorColumn cterm<span class="token operator">=</span>none ctermbg<span class="token operator">=</span>lightgray ctermfg<span class="token operator">=</span>none<span class="token keyword">else</span>    <span class="token keyword">set</span> <span class="token builtin">background</span><span class="token operator">=</span>dark    <span class="token string">""</span><span class="token builtin">hi</span> LineNr cterm<span class="token operator">=</span>bold ctermbg<span class="token operator">=</span>black ctermfg<span class="token operator">=</span>white    <span class="token string">""</span><span class="token builtin">hi</span> CursorLine cterm<span class="token operator">=</span>none ctermbg<span class="token operator">=</span>darkgray ctermfg<span class="token operator">=</span>none    <span class="token string">""</span><span class="token builtin">hi</span> CursorColumn cterm<span class="token operator">=</span>none ctermbg<span class="token operator">=</span>darkgray ctermfg<span class="token operator">=</span>none<span class="token keyword">endif</span><span class="token punctuation">:</span><span class="token keyword">silent</span><span class="token operator">!</span> <span class="token keyword">colorscheme</span> solarized<span class="token comment">"colorscheme default</span><span class="token comment">" indent guides</span><span class="token comment">"let g:indent_guides_enable_on_vim_startup=1</span><span class="token comment">" 从第二层开始可视化显示缩进</span><span class="token keyword">let</span> g<span class="token punctuation">:</span>indent_guides_start_level<span class="token operator">=</span><span class="token number">2</span><span class="token comment">"let g:indent_guides_auto_colors = 0</span><span class="token comment">"hi IndentGuidesOdd  guibg=red   ctermbg=3</span><span class="token comment">"hi IndentGuidesEven guibg=green ctermbg=4</span><span class="token comment">" 色块宽度</span><span class="token keyword">let</span> g<span class="token punctuation">:</span>indent_guides_guide_size<span class="token operator">=</span><span class="token number">1</span><span class="token comment">" 快捷键 &lt;Leader>sj 开/关缩进可视化</span><span class="token builtin">noremap</span> <span class="token operator">&lt;</span>Leader<span class="token operator">></span><span class="token builtin">sj</span> <span class="token punctuation">:</span>IndentGuidesToggle<span class="token operator">&lt;</span>CR<span class="token operator">></span><span class="token comment">" 每行不能超过180字符，否则高亮显示</span><span class="token builtin">highlight</span> OverLength ctermbg<span class="token operator">=</span><span class="token keyword">red</span> ctermfg<span class="token operator">=</span>white guibg<span class="token operator">=</span>#<span class="token number">592929</span><span class="token keyword">match</span> OverLength <span class="token operator">/</span>\<span class="token operator">%</span>180v<span class="token operator">.</span>\<span class="token operator">+</span><span class="token operator">/</span><span class="token comment">" 补全菜单的开启与关闭</span><span class="token keyword">set</span> <span class="token builtin">completeopt</span><span class="token operator">=</span>longest<span class="token punctuation">,</span>menu                    <span class="token comment">" 让Vim的补全菜单行为与一般IDE一致(参考VimTip1228)</span><span class="token keyword">let</span> g<span class="token punctuation">:</span>ycm_min_num_of_chars_for_completion<span class="token operator">=</span><span class="token number">2</span>             <span class="token comment">" 从第2个键入字符就开始罗列匹配项</span><span class="token keyword">let</span> g<span class="token punctuation">:</span>ycm_cache_omnifunc<span class="token operator">=</span><span class="token number">0</span>                      <span class="token comment">" 禁止缓存匹配项,每次都重新生成匹配项</span><span class="token keyword">let</span> g<span class="token punctuation">:</span>ycm_autoclose_preview_window_after_completion<span class="token operator">=</span><span class="token number">1</span>       <span class="token comment">" 智能关闭自动补全窗口</span><span class="token builtin">autocmd</span> InsertLeave <span class="token operator">*</span> <span class="token keyword">if</span> <span class="token function">pumvisible</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token number">0</span>|<span class="token keyword">pclose</span>|<span class="token keyword">endif</span>         <span class="token comment">" 离开插入模式后自动关闭预览窗口</span><span class="token comment">" 补全菜单中各项之间进行切换和选取：默认使用tab  s-tab进行上下切换，使用空格选取。可进行自定义设置：</span><span class="token comment">"let g:ycm_key_list_select_completion=[</span><span class="token string">'&lt;c-n>'</span><span class="token punctuation">]</span><span class="token string">"let g:ycm_key_list_select_completion = ['&lt;Down>']      "</span> 通过上下键在补全菜单中进行切换<span class="token comment">"let g:ycm_key_list_previous_completion=[</span><span class="token string">'&lt;c-p>'</span><span class="token punctuation">]</span><span class="token comment">"let g:ycm_key_list_previous_completion = [</span><span class="token string">'&lt;Up>'</span><span class="token punctuation">]</span><span class="token comment">" 回车即选中补全菜单中的当前项</span>inoremap <span class="token operator">&lt;</span>expr<span class="token operator">></span> <span class="token operator">&lt;</span>CR<span class="token operator">></span>      <span class="token function">pumvisible</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">?</span> <span class="token string">"\&lt;C-y>"</span> <span class="token punctuation">:</span> <span class="token string">"\&lt;CR>"</span><span class="token comment">" 开启各种补全引擎</span><span class="token keyword">let</span> g<span class="token punctuation">:</span>ycm_collect_identifiers_from_tags_files<span class="token operator">=</span><span class="token number">1</span>         <span class="token comment">" 开启 YCM 基于标签引擎</span><span class="token keyword">let</span> g<span class="token punctuation">:</span>ycm_auto_trigger <span class="token operator">=</span> <span class="token number">1</span>                  <span class="token comment">" 开启 YCM 基于标识符补全，默认为1</span><span class="token keyword">let</span> g<span class="token punctuation">:</span>ycm_seed_identifiers_with_syntax<span class="token operator">=</span><span class="token number">1</span>                <span class="token comment">" 开启 YCM 基于语法关键字补全</span><span class="token keyword">let</span> g<span class="token punctuation">:</span>ycm_complete_in_comments <span class="token operator">=</span> <span class="token number">1</span>              <span class="token comment">" 在注释输入中也能补全</span><span class="token keyword">let</span> g<span class="token punctuation">:</span>ycm_complete_in_strings <span class="token operator">=</span> <span class="token number">1</span>               <span class="token comment">" 在字符串输入中也能补全</span><span class="token keyword">let</span> g<span class="token punctuation">:</span>ycm_collect_identifiers_from_comments_and_strings <span class="token operator">=</span> <span class="token number">0</span> <span class="token comment">" 注释和字符串中的文字也会被收入补全</span><span class="token comment">" 重映射快捷键</span><span class="token comment">"上下左右键的行为 会显示其他信息,inoremap由i 插入模式和noremap不重映射组成，只映射一层，不会映射到映射的映射</span>inoremap <span class="token operator">&lt;</span>expr<span class="token operator">></span> <span class="token operator">&lt;</span>Down<span class="token operator">></span>     <span class="token function">pumvisible</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">?</span> <span class="token string">"\&lt;C-n>"</span> <span class="token punctuation">:</span> <span class="token string">"\&lt;Down>"</span>inoremap <span class="token operator">&lt;</span>expr<span class="token operator">></span> <span class="token operator">&lt;</span>Up<span class="token operator">></span>       <span class="token function">pumvisible</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">?</span> <span class="token string">"\&lt;C-p>"</span> <span class="token punctuation">:</span> <span class="token string">"\&lt;Up>"</span>inoremap <span class="token operator">&lt;</span>expr<span class="token operator">></span> <span class="token operator">&lt;</span>PageDown<span class="token operator">></span> <span class="token function">pumvisible</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">?</span> <span class="token string">"\&lt;PageDown>\&lt;C-p>\&lt;C-n>"</span> <span class="token punctuation">:</span> <span class="token string">"\&lt;PageDown>"</span>inoremap <span class="token operator">&lt;</span>expr<span class="token operator">></span> <span class="token operator">&lt;</span>PageUp<span class="token operator">></span>   <span class="token function">pumvisible</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">?</span> <span class="token string">"\&lt;PageUp>\&lt;C-p>\&lt;C-n>"</span> <span class="token punctuation">:</span> <span class="token string">"\&lt;PageUp>"</span><span class="token string">"nnoremap &lt;F5> :YcmForceCompileAndDiagnostics&lt;CR>           "</span> force recomile with syntastic<span class="token string">"nnoremap &lt;leader>lo :lopen&lt;CR>    "</span><span class="token keyword">open</span> locationlist<span class="token string">"nnoremap &lt;leader>lc :lclose&lt;CR>    "</span><span class="token keyword">close</span> locationlist<span class="token comment">"inoremap &lt;leader>&lt;leader> &lt;C-x>&lt;C-o></span>nnoremap <span class="token operator">&lt;</span>leader<span class="token operator">></span>jd <span class="token punctuation">:</span>YcmCompleter GoToDefinitionElseDeclaration<span class="token operator">&lt;</span>CR<span class="token operator">></span> <span class="token comment">" 跳转到定义处</span><span class="token keyword">let</span> g<span class="token punctuation">:</span>ycm_confirm_extra_conf<span class="token operator">=</span><span class="token number">0</span>                  <span class="token comment">" 关闭加载.ycm_extra_conf.py确认提示</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> vim </category>
          
      </categories>
      
      
        <tags>
            
            <tag> linux </tag>
            
            <tag> vim </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>计算机网络</title>
      <link href="/BLOG/2021/07/18/ji-suan-ji-wang-luo/"/>
      <url>/BLOG/2021/07/18/ji-suan-ji-wang-luo/</url>
      
        <content type="html"><![CDATA[<h1 id="HTTP-基本概念"><a href="#HTTP-基本概念" class="headerlink" title="HTTP 基本概念"></a>HTTP 基本概念</h1><h2 id="HTTP是什么？描述一下"><a href="#HTTP是什么？描述一下" class="headerlink" title="HTTP是什么？描述一下"></a>HTTP是什么？描述一下</h2><p><code>HTTP</code> 是超文本传输协议，也就是<code>HyperText Transfer Protocol</code>。</p><h2 id="超文本传输协议"><a href="#超文本传输协议" class="headerlink" title="超文本传输协议"></a>超文本传输协议</h2><ul><li><p>协议<br>HTTP 是一个用在计算机世界里的协议。它使用计算机能够理解的语言确立了一种计算机之间交流通信的规范（两个以上的参与者），以及相关的各种控制和错误处理方式（行为约定和规范）。</p></li><li><p>传输<br>所谓的「传输」，很好理解，就是把一堆东西从 <code>A</code> 点搬到 <code>B</code> 点，或者从 <code>B</code> 点 搬到 <code>A</code> 点。</p><p>别轻视了这个简单的动作，它至少包含两项重要的信息。</p><p><code>HTTP</code> 协议是一个双向协议。</p><p>我们在上网冲浪时，浏览器是请求方 <code>A</code> ，百度网站就是应答方 <code>B</code>。双方约定用 HTTP 协议来通信，于是浏览器把请求数据发送给网站,网站再把一些数据返回给浏览器，最后由浏览器渲染在屏幕，就可以看到图片、视频了。</p><p>数据虽然是在 <code>A</code> 和 <code>B</code> 之间传输，但允许中间有中转或接力。</p><p>就好像第一排的同学想穿递纸条给最后一排的同学，那么传递的过程中就需要经过好多个同学（中间人），这样的传输方式就从<code>「A &lt; --- &gt; B」，变成了「A &lt;-&gt; N &lt;-&gt; M &lt;-&gt; B」</code>。</p><p>而在 <code>HTTP</code> 里，需要中间人遵从 <code>HTTP</code> 协议，只要不打扰基本的数据传输，就可以添加任意额外的东西。</p><p>针对传输，我们可以进一步理解了 <code>HTTP</code>。</p><p><code>HTTP</code> 是一个在计算机世界里专门用来在两点之间传输数据的约定和规范。</p></li></ul><ul><li>超文本<br><code>HTTP</code> 传输的内容是「超文本」。我们先来理解「文本」，在互联网早期的时候只是简单的字符文字，但现在「文本」。的涵义已经可以扩展为图片、视频、压缩包等，在<code>HTTP</code>眼里这些都算做「文本」。再来理解「超文本」，它就是超越了普通文本的文本，它是文字、图片、视频等的混合体最关键有超链接，能从一个超文本跳转到另外一  个超文本。<code>HTML</code> 就是最常见的超文本了，它本身只是纯文字文件，但内部用很多标签定义了图片、视频等的链接，在经过浏览器的解释，呈现给我  们的就是一个文字、有画面的网页了。OK，经过了对 <code>HTTP</code> 里这三个名词的详细解释，就可以给出比「超文本传输协议」这七个字更准确更有技术含量的答案：<code>HTTP</code> 是一个在计算机世界里专门在「两点」之间「传输」文字、图片、音频、视频等「超文本」数据的「约定和规范」。</li></ul><h2 id="那「HTTP-是用于从互联网服务器传输超文本到本地浏览器的协议HTTP」-，这种说法正确吗？"><a href="#那「HTTP-是用于从互联网服务器传输超文本到本地浏览器的协议HTTP」-，这种说法正确吗？" class="headerlink" title="那「HTTP 是用于从互联网服务器传输超文本到本地浏览器的协议HTTP」 ，这种说法正确吗？"></a>那「HTTP 是用于从互联网服务器传输超文本到本地浏览器的协议HTTP」 ，这种说法正确吗？</h2><p>这种说法是不正确的。因为也可以是「服务器&lt; – &gt;服务器」，所以采用两点之间的描述会更准确。</p><h2 id="HTTP-常见的状态码，有哪些？"><a href="#HTTP-常见的状态码，有哪些？" class="headerlink" title="HTTP 常见的状态码，有哪些？"></a>HTTP 常见的状态码，有哪些？</h2><ul><li><p>1xx</p><p>1xx 类状态码属于提示信息，是协议处理中的一种中间状态，实际用到的比较少。</p></li><li><p>2xx</p><p>2xx 类状态码表示服务器成功处理了客户端的请求，也是我们最愿意看到的状态。</p><pre><code>「200 OK」是最常见的成功状态码，表示一切正常。如果是非 HEAD 请求，服务器返回的响应头都会有 body 数据。「204 No Content」也是常见的成功状态码，与 200 OK 基本相同，但响应头没有 body 数据。「206 Partial Content」是应用于 HTTP 分块下载或断电续传，表示响应返回的 body 数据并不是资源的全部，而是其中的一部分，也是服务器处理成功的状态。</code></pre></li><li><p>3xx</p><p>3xx 类状态码表示客户端请求的资源发送了变动，需要客户端用新的 URL 重新发送请求获取资源，也就是重定向。</p><pre><code>「301 Moved Permanently」表示永久重定向，说明请求的资源已经不存在了，需改用新的 URL 再次访问。「302 Moved Permanently」表示临时重定向，说明请求的资源还在，但暂时需要用另一个 URL 来访问。 301 和 302 都会在响应头里使用字段 Location，指明后续要跳转的 URL，浏览器会自动重定向新的 URL。「304 Not Modified」不具有跳转的含义，表示资源未修改，重定向已存在的缓冲文件，也称缓存重定向，用于缓存控制。</code></pre></li><li><p>4xx</p><p>4xx 类状态码表示客户端发送的报文有误，服务器无法处理，也就是错误码的含义。</p><pre><code>「400 Bad Request」表示客户端请求的报文有错误，但只是个笼统的错误。「403 Forbidden」表示服务器禁止访问资源，并不是客户端的请求出错。「404 Not Found」表示请求的资源在服务器上不存在或未找到，所以无法提供给客户端。</code></pre></li><li><p>5xx</p><p>5xx 类状态码表示客户端请求报文正确，但是服务器处理时内部发生了错误，属于服务器端的错误码。</p><pre><code>「500 Internal Server Error」与 400 类型，是个笼统通用的错误码，服务器发生了什么错误，我们并不知道。「501 Not Implemented」表示客户端请求的功能还不支持，类似“即将开业，敬请期待”的意思。「502 Bad Gateway」通常是服务器作为网关或代理时返回的错误码，表示服务器自身工作正常，访问后端服务器发生了错误。「503 Service Unavailable」表示服务器当前很忙，暂时无法响应服务器，类似“网络服务正忙，请稍后重试”的意思。</code></pre></li></ul><p><img src="https://raw.githubusercontent.com/dFarui/images/master/20210722024516.png" alt="test"></p>]]></content>
      
      
      <categories>
          
          <category> 计算机网络 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Networks </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
