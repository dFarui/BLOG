<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>计算机网络</title>
      <link href="/BLOG/2021/07/18/ji-suan-ji-wang-luo/"/>
      <url>/BLOG/2021/07/18/ji-suan-ji-wang-luo/</url>
      
        <content type="html"><![CDATA[<h1 id="HTTP-基本概念"><a href="#HTTP-基本概念" class="headerlink" title="HTTP 基本概念"></a>HTTP 基本概念</h1><h2 id="HTTP是什么？描述一下"><a href="#HTTP是什么？描述一下" class="headerlink" title="HTTP是什么？描述一下"></a>HTTP是什么？描述一下</h2><p><code>HTTP</code> 是超文本传输协议，也就是<code>HyperText Transfer Protocol</code>。</p><h2 id="超文本传输协议"><a href="#超文本传输协议" class="headerlink" title="超文本传输协议"></a>超文本传输协议</h2><ul><li><p>协议<br>HTTP 是一个用在计算机世界里的协议。它使用计算机能够理解的语言确立了一种计算机之间交流通信的规范（两个以上的参与者），以及相关的各种控制和错误处理方式（行为约定和规范）。</p></li><li><p>传输<br>所谓的「传输」，很好理解，就是把一堆东西从 <code>A</code> 点搬到 <code>B</code> 点，或者从 <code>B</code> 点 搬到 <code>A</code> 点。</p><p>别轻视了这个简单的动作，它至少包含两项重要的信息。</p><p><code>HTTP</code> 协议是一个双向协议。</p><p>我们在上网冲浪时，浏览器是请求方 <code>A</code> ，百度网站就是应答方 <code>B</code>。双方约定用 HTTP 协议来通信，于是浏览器把请求数据发送给网站,网站再把一些数据返回给浏览器，最后由浏览器渲染在屏幕，就可以看到图片、视频了。</p><p>数据虽然是在 <code>A</code> 和 <code>B</code> 之间传输，但允许中间有中转或接力。</p><p>就好像第一排的同学想穿递纸条给最后一排的同学，那么传递的过程中就需要经过好多个同学（中间人），这样的传输方式就从<code>「A &lt; --- &gt; B」，变成了「A &lt;-&gt; N &lt;-&gt; M &lt;-&gt; B」</code>。</p><p>而在 <code>HTTP</code> 里，需要中间人遵从 <code>HTTP</code> 协议，只要不打扰基本的数据传输，就可以添加任意额外的东西。</p><p>针对传输，我们可以进一步理解了 <code>HTTP</code>。</p><p><code>HTTP</code> 是一个在计算机世界里专门用来在两点之间传输数据的约定和规范。</p></li></ul><ul><li>超文本<br><code>HTTP</code> 传输的内容是「超文本」。我们先来理解「文本」，在互联网早期的时候只是简单的字符文字，但现在「文本」。的涵义已经可以扩展为图片、视频、压缩包等，在<code>HTTP</code>眼里这些都算做「文本」。再来理解「超文本」，它就是超越了普通文本的文本，它是文字、图片、视频等的混合体最关键有超链接，能从一个超文本跳转到另外一  个超文本。<code>HTML</code> 就是最常见的超文本了，它本身只是纯文字文件，但内部用很多标签定义了图片、视频等的链接，在经过浏览器的解释，呈现给我  们的就是一个文字、有画面的网页了。OK，经过了对 <code>HTTP</code> 里这三个名词的详细解释，就可以给出比「超文本传输协议」这七个字更准确更有技术含量的答案：<code>HTTP</code> 是一个在计算机世界里专门在「两点」之间「传输」文字、图片、音频、视频等「超文本」数据的「约定和规范」。</li></ul><h2 id="那「HTTP-是用于从互联网服务器传输超文本到本地浏览器的协议HTTP」-，这种说法正确吗？"><a href="#那「HTTP-是用于从互联网服务器传输超文本到本地浏览器的协议HTTP」-，这种说法正确吗？" class="headerlink" title="那「HTTP 是用于从互联网服务器传输超文本到本地浏览器的协议HTTP」 ，这种说法正确吗？"></a>那「HTTP 是用于从互联网服务器传输超文本到本地浏览器的协议HTTP」 ，这种说法正确吗？</h2><p>这种说法是不正确的。因为也可以是「服务器&lt; – &gt;服务器」，所以采用两点之间的描述会更准确。</p><h2 id="HTTP-常见的状态码，有哪些？"><a href="#HTTP-常见的状态码，有哪些？" class="headerlink" title="HTTP 常见的状态码，有哪些？"></a>HTTP 常见的状态码，有哪些？</h2><ul><li><p>1xx</p><p>1xx 类状态码属于提示信息，是协议处理中的一种中间状态，实际用到的比较少。</p></li><li><p>2xx</p><p>2xx 类状态码表示服务器成功处理了客户端的请求，也是我们最愿意看到的状态。</p><pre><code>「200 OK」是最常见的成功状态码，表示一切正常。如果是非 HEAD 请求，服务器返回的响应头都会有 body 数据。「204 No Content」也是常见的成功状态码，与 200 OK 基本相同，但响应头没有 body 数据。「206 Partial Content」是应用于 HTTP 分块下载或断电续传，表示响应返回的 body 数据并不是资源的全部，而是其中的一部分，也是服务器处理成功的状态。</code></pre></li><li><p>3xx</p><p>3xx 类状态码表示客户端请求的资源发送了变动，需要客户端用新的 URL 重新发送请求获取资源，也就是重定向。</p><pre><code>「301 Moved Permanently」表示永久重定向，说明请求的资源已经不存在了，需改用新的 URL 再次访问。「302 Moved Permanently」表示临时重定向，说明请求的资源还在，但暂时需要用另一个 URL 来访问。 301 和 302 都会在响应头里使用字段 Location，指明后续要跳转的 URL，浏览器会自动重定向新的 URL。「304 Not Modified」不具有跳转的含义，表示资源未修改，重定向已存在的缓冲文件，也称缓存重定向，用于缓存控制。</code></pre></li><li><p>4xx</p><p>4xx 类状态码表示客户端发送的报文有误，服务器无法处理，也就是错误码的含义。</p><pre><code>「400 Bad Request」表示客户端请求的报文有错误，但只是个笼统的错误。「403 Forbidden」表示服务器禁止访问资源，并不是客户端的请求出错。「404 Not Found」表示请求的资源在服务器上不存在或未找到，所以无法提供给客户端。</code></pre></li><li><p>5xx</p><p>5xx 类状态码表示客户端请求报文正确，但是服务器处理时内部发生了错误，属于服务器端的错误码。</p><pre><code>「500 Internal Server Error」与 400 类型，是个笼统通用的错误码，服务器发生了什么错误，我们并不知道。「501 Not Implemented」表示客户端请求的功能还不支持，类似“即将开业，敬请期待”的意思。「502 Bad Gateway」通常是服务器作为网关或代理时返回的错误码，表示服务器自身工作正常，访问后端服务器发生了错误。「503 Service Unavailable」表示服务器当前很忙，暂时无法响应服务器，类似“网络服务正忙，请稍后重试”的意思。</code></pre></li></ul><p>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</p><p><img src="https://raw.githubusercontent.com/dFarui/images/master/20210722024516.png" alt="20210722024516"></p>]]></content>
      
      
      <categories>
          
          <category> 计算机网络 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Networks </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
